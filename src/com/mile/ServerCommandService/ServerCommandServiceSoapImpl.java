
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.mile.ServerCommandService;

import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.2
 * 2018-09-13T12:46:27.576-04:00
 * Generated source version: 2.4.2
 * 
 */

@javax.jws.WebService(
                      serviceName = "ServerCommandService",
                      portName = "ServerCommandServiceSoap",
                      targetNamespace = "http://videoos.net/2/XProtectCSServerCommand",
                      wsdlLocation = "file:/C:/Program Files/Milestone/MIPSDK/WSDL/ServerCommandService.wsdl",
                      endpointInterface = "com.mile.ServerCommandService.ServerCommandServiceSoap")
                      
public class ServerCommandServiceSoapImpl implements ServerCommandServiceSoap {

    private static final Logger LOG = Logger.getLogger(ServerCommandServiceSoapImpl.class.getName());

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#setCustomSettingDataGlobal(java.lang.String  token ,)java.lang.String  customSettingId ,)com.mile.ServerCommandService.CustomSettingData  customSettingData ,)boolean  forceOverride )*
     */
    public com.mile.ServerCommandService.SetCustomSettingResultType setCustomSettingDataGlobal(java.lang.String token,java.lang.String customSettingId,com.mile.ServerCommandService.CustomSettingData customSettingData,boolean forceOverride) { 
        LOG.info("Executing operation setCustomSettingDataGlobal");
        System.out.println(token);
        System.out.println(customSettingId);
        System.out.println(customSettingData);
        System.out.println(forceOverride);
        try {
            com.mile.ServerCommandService.SetCustomSettingResultType _return = com.mile.ServerCommandService.SetCustomSettingResultType.UNSPECIFIED_ERROR;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#setCustomSettingDataUser(java.lang.String  token ,)java.lang.String  customSettingId ,)com.mile.ServerCommandService.CustomSettingData  customSettingData ,)boolean  forceOverride )*
     */
    public com.mile.ServerCommandService.SetCustomSettingResultType setCustomSettingDataUser(java.lang.String token,java.lang.String customSettingId,com.mile.ServerCommandService.CustomSettingData customSettingData,boolean forceOverride) { 
        LOG.info("Executing operation setCustomSettingDataUser");
        System.out.println(token);
        System.out.println(customSettingId);
        System.out.println(customSettingData);
        System.out.println(forceOverride);
        try {
            com.mile.ServerCommandService.SetCustomSettingResultType _return = com.mile.ServerCommandService.SetCustomSettingResultType.UNSPECIFIED_ERROR;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#getServerVersion(*
     */
    public java.lang.String getServerVersion() { 
        LOG.info("Executing operation getServerVersion");
        try {
            java.lang.String _return = "_return-1579138629";
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#getViewGroupData(java.lang.String  token ,)java.lang.String  viewGroupId )*
     */
    public com.mile.ServerCommandService.ViewGroup getViewGroupData(java.lang.String token,java.lang.String viewGroupId) { 
        LOG.info("Executing operation getViewGroupData");
        System.out.println(token);
        System.out.println(viewGroupId);
        try {
            com.mile.ServerCommandService.ViewGroup _return = new com.mile.ServerCommandService.ViewGroup();
            com.mile.ServerCommandService.ViewGroupInfo _returnViewGroupInfo = new com.mile.ServerCommandService.ViewGroupInfo();
            _returnViewGroupInfo.setId("Id1692637168");
            _returnViewGroupInfo.setName("Name1719251023");
            com.mile.ServerCommandService.ViewGroupType _returnViewGroupInfoViewGroupType = com.mile.ServerCommandService.ViewGroupType.NORMAL;
            _returnViewGroupInfo.setViewGroupType(_returnViewGroupInfoViewGroupType);
            _returnViewGroupInfo.setReadOnly(false);
            _returnViewGroupInfo.setLastModifiedTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.590-04:00"));
            _returnViewGroupInfo.setLastModifiedUser("LastModifiedUser-1392952581");
            _return.setViewGroupInfo(_returnViewGroupInfo);
            com.mile.ServerCommandService.ViewGroupData _returnViewGroupData = new com.mile.ServerCommandService.ViewGroupData();
            _returnViewGroupData.setDataVersion(-1732938028);
            _returnViewGroupData.setXmlVersion(269088195);
            com.mile.ServerCommandService.ViewGroupData.ViewGroupDataXml _returnViewGroupDataViewGroupDataXml = new com.mile.ServerCommandService.ViewGroupData.ViewGroupDataXml();
            java.util.List<java.lang.Object> _returnViewGroupDataViewGroupDataXmlContent = new java.util.ArrayList<java.lang.Object>();
            _returnViewGroupDataViewGroupDataXml.getContent().addAll(_returnViewGroupDataViewGroupDataXmlContent);
            _returnViewGroupData.setViewGroupDataXml(_returnViewGroupDataViewGroupDataXml);
            _return.setViewGroupData(_returnViewGroupData);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#markedDataCreate(java.lang.String  token ,)java.lang.String  markedDataId ,)com.mile.ServerCommandService.ArrayOfGuid  deviceIds ,)javax.xml.datatype.XMLGregorianCalendar  timeStart ,)javax.xml.datatype.XMLGregorianCalendar  timeTag ,)javax.xml.datatype.XMLGregorianCalendar  timeEnd ,)java.lang.String  reference ,)java.lang.String  header ,)java.lang.String  description ,)int  markedDataType ,)boolean  useRetention ,)javax.xml.datatype.XMLGregorianCalendar  retentionExpire ,)com.mile.ServerCommandService.RetentionOption  retentionOption )*
     */
    public com.mile.ServerCommandService.MarkedDataResult markedDataCreate(java.lang.String token,java.lang.String markedDataId,com.mile.ServerCommandService.ArrayOfGuid deviceIds,javax.xml.datatype.XMLGregorianCalendar timeStart,javax.xml.datatype.XMLGregorianCalendar timeTag,javax.xml.datatype.XMLGregorianCalendar timeEnd,java.lang.String reference,java.lang.String header,java.lang.String description,int markedDataType,boolean useRetention,javax.xml.datatype.XMLGregorianCalendar retentionExpire,com.mile.ServerCommandService.RetentionOption retentionOption) { 
        LOG.info("Executing operation markedDataCreate");
        System.out.println(token);
        System.out.println(markedDataId);
        System.out.println(deviceIds);
        System.out.println(timeStart);
        System.out.println(timeTag);
        System.out.println(timeEnd);
        System.out.println(reference);
        System.out.println(header);
        System.out.println(description);
        System.out.println(markedDataType);
        System.out.println(useRetention);
        System.out.println(retentionExpire);
        System.out.println(retentionOption);
        try {
            com.mile.ServerCommandService.MarkedDataResult _return = new com.mile.ServerCommandService.MarkedDataResult();
            com.mile.ServerCommandService.MarkedData _returnMarkedData = new com.mile.ServerCommandService.MarkedData();
            _returnMarkedData.setId("Id1585897228");
            com.mile.ServerCommandService.ArrayOfGuid _returnMarkedDataDeviceIds = new com.mile.ServerCommandService.ArrayOfGuid();
            java.util.List<java.lang.String> _returnMarkedDataDeviceIdsGuid = new java.util.ArrayList<java.lang.String>();
            _returnMarkedDataDeviceIds.getGuid().addAll(_returnMarkedDataDeviceIdsGuid);
            _returnMarkedData.setDeviceIds(_returnMarkedDataDeviceIds);
            _returnMarkedData.setCreated(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.625-04:00"));
            _returnMarkedData.setLastModified(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.626-04:00"));
            _returnMarkedData.setReference("Reference-727461952");
            _returnMarkedData.setHeader("Header870509284");
            _returnMarkedData.setDescription("Description-774009623");
            _returnMarkedData.setUser("User1107052190");
            _returnMarkedData.setStartTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.627-04:00"));
            _returnMarkedData.setTagTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.628-04:00"));
            _returnMarkedData.setEndTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.629-04:00"));
            _returnMarkedData.setUseRetention(false);
            _returnMarkedData.setRetentionExpire(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.630-04:00"));
            _returnMarkedData.setRetentionSize(7155691686156127653l);
            com.mile.ServerCommandService.RetentionOption _returnMarkedDataRetentionOption = new com.mile.ServerCommandService.RetentionOption();
            _returnMarkedDataRetentionOption.setRetentionUnits(976619565);
            com.mile.ServerCommandService.RetentionOptionType _returnMarkedDataRetentionOptionRetentionOptionType = com.mile.ServerCommandService.RetentionOptionType.MONTHS;
            _returnMarkedDataRetentionOption.setRetentionOptionType(_returnMarkedDataRetentionOptionRetentionOptionType);
            _returnMarkedData.setRetentionOption(_returnMarkedDataRetentionOption);
            _return.setMarkedData(_returnMarkedData);
            com.mile.ServerCommandService.ArrayOfFaultDevice _returnFaultDevices = new com.mile.ServerCommandService.ArrayOfFaultDevice();
            java.util.List<com.mile.ServerCommandService.FaultDevice> _returnFaultDevicesFaultDevice = new java.util.ArrayList<com.mile.ServerCommandService.FaultDevice>();
            com.mile.ServerCommandService.FaultDevice _returnFaultDevicesFaultDeviceVal1 = new com.mile.ServerCommandService.FaultDevice();
            _returnFaultDevicesFaultDeviceVal1.setDeviceId("DeviceId-498012367");
            _returnFaultDevicesFaultDeviceVal1.setErrorCode(-1445900082);
            _returnFaultDevicesFaultDeviceVal1.setMessage("Message537665561");
            _returnFaultDevicesFaultDevice.add(_returnFaultDevicesFaultDeviceVal1);
            _returnFaultDevices.getFaultDevice().addAll(_returnFaultDevicesFaultDevice);
            _return.setFaultDevices(_returnFaultDevices);
            com.mile.ServerCommandService.ResultStatus _returnStatus = com.mile.ServerCommandService.ResultStatus.RECORDER_NOT_FOUND;
            _return.setStatus(_returnStatus);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#matrixMonitorActivateCamera(java.lang.String  token ,)java.lang.String  matrixMonitorId ,)java.lang.String  deviceId )*
     */
    public void matrixMonitorActivateCamera(java.lang.String token,java.lang.String matrixMonitorId,java.lang.String deviceId) { 
        LOG.info("Executing operation matrixMonitorActivateCamera");
        System.out.println(token);
        System.out.println(matrixMonitorId);
        System.out.println(deviceId);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#updatePresetPosition(java.lang.String  token ,)java.lang.String  id ,)java.lang.String  deviceId )*
     */
    public void updatePresetPosition(java.lang.String token,java.lang.String id,java.lang.String deviceId) { 
        LOG.info("Executing operation updatePresetPosition");
        System.out.println(token);
        System.out.println(id);
        System.out.println(deviceId);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#getCustomSettingDataUser(java.lang.String  token ,)java.lang.String  customSettingId )*
     */
    public com.mile.ServerCommandService.CustomSetting getCustomSettingDataUser(java.lang.String token,java.lang.String customSettingId) { 
        LOG.info("Executing operation getCustomSettingDataUser");
        System.out.println(token);
        System.out.println(customSettingId);
        try {
            com.mile.ServerCommandService.CustomSetting _return = new com.mile.ServerCommandService.CustomSetting();
            com.mile.ServerCommandService.CustomSettingInfo _returnCustomSettingInfo = new com.mile.ServerCommandService.CustomSettingInfo();
            _returnCustomSettingInfo.setId("Id-1338823863");
            _returnCustomSettingInfo.setLastModifiedTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.633-04:00"));
            _returnCustomSettingInfo.setLastModifiedUser("LastModifiedUser1698398162");
            _return.setCustomSettingInfo(_returnCustomSettingInfo);
            com.mile.ServerCommandService.CustomSettingData _returnCustomSettingData = new com.mile.ServerCommandService.CustomSettingData();
            _returnCustomSettingData.setDataVersion(-222845706);
            com.mile.ServerCommandService.CustomSettingData.CustomSettingDataXml _returnCustomSettingDataCustomSettingDataXml = new com.mile.ServerCommandService.CustomSettingData.CustomSettingDataXml();
            java.util.List<java.lang.Object> _returnCustomSettingDataCustomSettingDataXmlContent = new java.util.ArrayList<java.lang.Object>();
            _returnCustomSettingDataCustomSettingDataXml.getContent().addAll(_returnCustomSettingDataCustomSettingDataXmlContent);
            _returnCustomSettingData.setCustomSettingDataXml(_returnCustomSettingDataCustomSettingDataXml);
            _return.setCustomSettingData(_returnCustomSettingData);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#getVersion(*
     */
    public int getVersion() { 
        LOG.info("Executing operation getVersion");
        try {
            int _return = 862323013;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#logout(java.lang.String  instanceId ,)java.lang.String  currentToken )*
     */
    public void logout(java.lang.String instanceId,java.lang.String currentToken) { 
        LOG.info("Executing operation logout");
        System.out.println(instanceId);
        System.out.println(currentToken);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#markedDataSearch(java.lang.String  token ,)com.mile.ServerCommandService.ArrayOfGuid  deviceIds ,)java.lang.String  searchText ,)com.mile.ServerCommandService.ArrayOfString  users ,)javax.xml.datatype.XMLGregorianCalendar  createdFromTime ,)javax.xml.datatype.XMLGregorianCalendar  createdToTime ,)javax.xml.datatype.XMLGregorianCalendar  markedDataFromTime ,)javax.xml.datatype.XMLGregorianCalendar  markedDataToTime ,)javax.xml.datatype.XMLGregorianCalendar  tagTimeFromTime ,)javax.xml.datatype.XMLGregorianCalendar  tagTimeToTime ,)javax.xml.datatype.XMLGregorianCalendar  retentionExpireFrom ,)javax.xml.datatype.XMLGregorianCalendar  retentionExpireTo ,)int  pageIndex ,)int  pageSize ,)com.mile.ServerCommandService.SortOrderOption  sortOrder ,)boolean  sortAscending )*
     */
    public com.mile.ServerCommandService.ArrayOfMarkedData markedDataSearch(java.lang.String token,com.mile.ServerCommandService.ArrayOfGuid deviceIds,java.lang.String searchText,com.mile.ServerCommandService.ArrayOfString users,javax.xml.datatype.XMLGregorianCalendar createdFromTime,javax.xml.datatype.XMLGregorianCalendar createdToTime,javax.xml.datatype.XMLGregorianCalendar markedDataFromTime,javax.xml.datatype.XMLGregorianCalendar markedDataToTime,javax.xml.datatype.XMLGregorianCalendar tagTimeFromTime,javax.xml.datatype.XMLGregorianCalendar tagTimeToTime,javax.xml.datatype.XMLGregorianCalendar retentionExpireFrom,javax.xml.datatype.XMLGregorianCalendar retentionExpireTo,int pageIndex,int pageSize,com.mile.ServerCommandService.SortOrderOption sortOrder,boolean sortAscending) { 
        LOG.info("Executing operation markedDataSearch");
        System.out.println(token);
        System.out.println(deviceIds);
        System.out.println(searchText);
        System.out.println(users);
        System.out.println(createdFromTime);
        System.out.println(createdToTime);
        System.out.println(markedDataFromTime);
        System.out.println(markedDataToTime);
        System.out.println(tagTimeFromTime);
        System.out.println(tagTimeToTime);
        System.out.println(retentionExpireFrom);
        System.out.println(retentionExpireTo);
        System.out.println(pageIndex);
        System.out.println(pageSize);
        System.out.println(sortOrder);
        System.out.println(sortAscending);
        try {
            com.mile.ServerCommandService.ArrayOfMarkedData _return = new com.mile.ServerCommandService.ArrayOfMarkedData();
            java.util.List<com.mile.ServerCommandService.MarkedData> _returnMarkedData = new java.util.ArrayList<com.mile.ServerCommandService.MarkedData>();
            com.mile.ServerCommandService.MarkedData _returnMarkedDataVal1 = new com.mile.ServerCommandService.MarkedData();
            _returnMarkedDataVal1.setId("Id2095995627");
            com.mile.ServerCommandService.ArrayOfGuid _returnMarkedDataVal1DeviceIds = new com.mile.ServerCommandService.ArrayOfGuid();
            java.util.List<java.lang.String> _returnMarkedDataVal1DeviceIdsGuid = new java.util.ArrayList<java.lang.String>();
            _returnMarkedDataVal1DeviceIds.getGuid().addAll(_returnMarkedDataVal1DeviceIdsGuid);
            _returnMarkedDataVal1.setDeviceIds(_returnMarkedDataVal1DeviceIds);
            _returnMarkedDataVal1.setCreated(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.636-04:00"));
            _returnMarkedDataVal1.setLastModified(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.637-04:00"));
            _returnMarkedDataVal1.setReference("Reference-1337310558");
            _returnMarkedDataVal1.setHeader("Header-486535058");
            _returnMarkedDataVal1.setDescription("Description1830066422");
            _returnMarkedDataVal1.setUser("User-1457944657");
            _returnMarkedDataVal1.setStartTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.638-04:00"));
            _returnMarkedDataVal1.setTagTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.639-04:00"));
            _returnMarkedDataVal1.setEndTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.640-04:00"));
            _returnMarkedDataVal1.setUseRetention(false);
            _returnMarkedDataVal1.setRetentionExpire(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.640-04:00"));
            _returnMarkedDataVal1.setRetentionSize(7095898838663804047l);
            com.mile.ServerCommandService.RetentionOption _returnMarkedDataVal1RetentionOption = new com.mile.ServerCommandService.RetentionOption();
            _returnMarkedDataVal1RetentionOption.setRetentionUnits(1954930574);
            com.mile.ServerCommandService.RetentionOptionType _returnMarkedDataVal1RetentionOptionRetentionOptionType = com.mile.ServerCommandService.RetentionOptionType.DAYS;
            _returnMarkedDataVal1RetentionOption.setRetentionOptionType(_returnMarkedDataVal1RetentionOptionRetentionOptionType);
            _returnMarkedDataVal1.setRetentionOption(_returnMarkedDataVal1RetentionOption);
            _returnMarkedData.add(_returnMarkedDataVal1);
            _return.getMarkedData().addAll(_returnMarkedData);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#bookmarkCreate(java.lang.String  token ,)java.lang.String  deviceId ,)javax.xml.datatype.XMLGregorianCalendar  timeBegin ,)javax.xml.datatype.XMLGregorianCalendar  timeTrigged ,)javax.xml.datatype.XMLGregorianCalendar  timeEnd ,)java.lang.String  reference ,)java.lang.String  header ,)java.lang.String  description )*
     */
    public com.mile.ServerCommandService.Bookmark bookmarkCreate(java.lang.String token,java.lang.String deviceId,javax.xml.datatype.XMLGregorianCalendar timeBegin,javax.xml.datatype.XMLGregorianCalendar timeTrigged,javax.xml.datatype.XMLGregorianCalendar timeEnd,java.lang.String reference,java.lang.String header,java.lang.String description) { 
        LOG.info("Executing operation bookmarkCreate");
        System.out.println(token);
        System.out.println(deviceId);
        System.out.println(timeBegin);
        System.out.println(timeTrigged);
        System.out.println(timeEnd);
        System.out.println(reference);
        System.out.println(header);
        System.out.println(description);
        try {
            com.mile.ServerCommandService.Bookmark _return = new com.mile.ServerCommandService.Bookmark();
            _return.setId("Id-644500897");
            _return.setDeviceId("DeviceId985562220");
            _return.setReference("Reference542977773");
            _return.setHeader("Header-1963959473");
            _return.setDescription("Description1751532318");
            _return.setUser("User-332502623");
            _return.setTimeBegin(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.642-04:00"));
            _return.setTimeTrigged(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.643-04:00"));
            _return.setTimeEnd(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.643-04:00"));
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#getVmoServicesList(*
     */
    public com.mile.ServerCommandService.ArrayOfDictionaryEntry getVmoServicesList() { 
        LOG.info("Executing operation getVmoServicesList");
        try {
            com.mile.ServerCommandService.ArrayOfDictionaryEntry _return = new com.mile.ServerCommandService.ArrayOfDictionaryEntry();
            java.util.List<com.mile.ServerCommandService.DictionaryEntry> _returnDictionaryEntry = new java.util.ArrayList<com.mile.ServerCommandService.DictionaryEntry>();
            com.mile.ServerCommandService.DictionaryEntry _returnDictionaryEntryVal1 = new com.mile.ServerCommandService.DictionaryEntry();
            java.lang.Object _returnDictionaryEntryVal1Key = null;
            _returnDictionaryEntryVal1.setKey(_returnDictionaryEntryVal1Key);
            java.lang.Object _returnDictionaryEntryVal1Value = null;
            _returnDictionaryEntryVal1.setValue(_returnDictionaryEntryVal1Value);
            _returnDictionaryEntry.add(_returnDictionaryEntryVal1);
            _return.getDictionaryEntry().addAll(_returnDictionaryEntry);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#markedDataUpdate(java.lang.String  token ,)java.lang.String  markedDataId ,)com.mile.ServerCommandService.ArrayOfGuid  deviceIds ,)javax.xml.datatype.XMLGregorianCalendar  timeStart ,)javax.xml.datatype.XMLGregorianCalendar  timeTag ,)javax.xml.datatype.XMLGregorianCalendar  timeEnd ,)java.lang.String  reference ,)java.lang.String  header ,)java.lang.String  description ,)int  markedDataType ,)boolean  useRetention ,)javax.xml.datatype.XMLGregorianCalendar  retentionExpire ,)com.mile.ServerCommandService.RetentionOption  retentionOption )*
     */
    public com.mile.ServerCommandService.MarkedDataResult markedDataUpdate(java.lang.String token,java.lang.String markedDataId,com.mile.ServerCommandService.ArrayOfGuid deviceIds,javax.xml.datatype.XMLGregorianCalendar timeStart,javax.xml.datatype.XMLGregorianCalendar timeTag,javax.xml.datatype.XMLGregorianCalendar timeEnd,java.lang.String reference,java.lang.String header,java.lang.String description,int markedDataType,boolean useRetention,javax.xml.datatype.XMLGregorianCalendar retentionExpire,com.mile.ServerCommandService.RetentionOption retentionOption) { 
        LOG.info("Executing operation markedDataUpdate");
        System.out.println(token);
        System.out.println(markedDataId);
        System.out.println(deviceIds);
        System.out.println(timeStart);
        System.out.println(timeTag);
        System.out.println(timeEnd);
        System.out.println(reference);
        System.out.println(header);
        System.out.println(description);
        System.out.println(markedDataType);
        System.out.println(useRetention);
        System.out.println(retentionExpire);
        System.out.println(retentionOption);
        try {
            com.mile.ServerCommandService.MarkedDataResult _return = new com.mile.ServerCommandService.MarkedDataResult();
            com.mile.ServerCommandService.MarkedData _returnMarkedData = new com.mile.ServerCommandService.MarkedData();
            _returnMarkedData.setId("Id1461679833");
            com.mile.ServerCommandService.ArrayOfGuid _returnMarkedDataDeviceIds = new com.mile.ServerCommandService.ArrayOfGuid();
            java.util.List<java.lang.String> _returnMarkedDataDeviceIdsGuid = new java.util.ArrayList<java.lang.String>();
            _returnMarkedDataDeviceIds.getGuid().addAll(_returnMarkedDataDeviceIdsGuid);
            _returnMarkedData.setDeviceIds(_returnMarkedDataDeviceIds);
            _returnMarkedData.setCreated(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.646-04:00"));
            _returnMarkedData.setLastModified(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.647-04:00"));
            _returnMarkedData.setReference("Reference-175157827");
            _returnMarkedData.setHeader("Header-1627394929");
            _returnMarkedData.setDescription("Description974558214");
            _returnMarkedData.setUser("User-1628626028");
            _returnMarkedData.setStartTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.648-04:00"));
            _returnMarkedData.setTagTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.648-04:00"));
            _returnMarkedData.setEndTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.649-04:00"));
            _returnMarkedData.setUseRetention(true);
            _returnMarkedData.setRetentionExpire(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.649-04:00"));
            _returnMarkedData.setRetentionSize(-8823941563123806826l);
            com.mile.ServerCommandService.RetentionOption _returnMarkedDataRetentionOption = new com.mile.ServerCommandService.RetentionOption();
            _returnMarkedDataRetentionOption.setRetentionUnits(895461200);
            com.mile.ServerCommandService.RetentionOptionType _returnMarkedDataRetentionOptionRetentionOptionType = com.mile.ServerCommandService.RetentionOptionType.MONTHS;
            _returnMarkedDataRetentionOption.setRetentionOptionType(_returnMarkedDataRetentionOptionRetentionOptionType);
            _returnMarkedData.setRetentionOption(_returnMarkedDataRetentionOption);
            _return.setMarkedData(_returnMarkedData);
            com.mile.ServerCommandService.ArrayOfFaultDevice _returnFaultDevices = new com.mile.ServerCommandService.ArrayOfFaultDevice();
            java.util.List<com.mile.ServerCommandService.FaultDevice> _returnFaultDevicesFaultDevice = new java.util.ArrayList<com.mile.ServerCommandService.FaultDevice>();
            com.mile.ServerCommandService.FaultDevice _returnFaultDevicesFaultDeviceVal1 = new com.mile.ServerCommandService.FaultDevice();
            _returnFaultDevicesFaultDeviceVal1.setDeviceId("DeviceId396823047");
            _returnFaultDevicesFaultDeviceVal1.setErrorCode(908828409);
            _returnFaultDevicesFaultDeviceVal1.setMessage("Message-1073054406");
            _returnFaultDevicesFaultDevice.add(_returnFaultDevicesFaultDeviceVal1);
            _returnFaultDevices.getFaultDevice().addAll(_returnFaultDevicesFaultDevice);
            _return.setFaultDevices(_returnFaultDevices);
            com.mile.ServerCommandService.ResultStatus _returnStatus = com.mile.ServerCommandService.ResultStatus.SUCCESS;
            _return.setStatus(_returnStatus);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#checkSmartClientVersion(int  major ,)int  minor ,)java.lang.String  revision )*
     */
    public com.mile.ServerCommandService.SmartClientVersion checkSmartClientVersion(int major,int minor,java.lang.String revision) { 
        LOG.info("Executing operation checkSmartClientVersion");
        System.out.println(major);
        System.out.println(minor);
        System.out.println(revision);
        try {
            com.mile.ServerCommandService.SmartClientVersion _return = new com.mile.ServerCommandService.SmartClientVersion();
            _return.setMajor(-1527605208);
            _return.setMinor(-1522566818);
            _return.setRevision("Revision1171970233");
            _return.setBeta(-1003333105);
            _return.setForceUpgrade(false);
            _return.setDisplayName("DisplayName1975955854");
            com.mile.ServerCommandService.UpgradeInfo _returnUpgradeInfo = new com.mile.ServerCommandService.UpgradeInfo();
            _returnUpgradeInfo.setHostname("Hostname-64191241");
            _returnUpgradeInfo.setPort(-2044970112);
            _returnUpgradeInfo.setPath("Path-330247568");
            _returnUpgradeInfo.setMessage("Message-499378114");
            _return.setUpgradeInfo(_returnUpgradeInfo);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#getConfigurationHardware(java.lang.String  token ,)com.mile.ServerCommandService.ArrayOfGuid  hardwareIds )*
     */
    public com.mile.ServerCommandService.ArrayOfHardwareInfo getConfigurationHardware(java.lang.String token,com.mile.ServerCommandService.ArrayOfGuid hardwareIds) { 
        LOG.info("Executing operation getConfigurationHardware");
        System.out.println(token);
        System.out.println(hardwareIds);
        try {
            com.mile.ServerCommandService.ArrayOfHardwareInfo _return = new com.mile.ServerCommandService.ArrayOfHardwareInfo();
            java.util.List<com.mile.ServerCommandService.HardwareInfo> _returnHardwareInfo = new java.util.ArrayList<com.mile.ServerCommandService.HardwareInfo>();
            com.mile.ServerCommandService.HardwareInfo _returnHardwareInfoVal1 = new com.mile.ServerCommandService.HardwareInfo();
            _returnHardwareInfoVal1.setHardwareId("HardwareId1791932576");
            com.mile.ServerCommandService.ArrayOfGuid _returnHardwareInfoVal1DeviceIds = new com.mile.ServerCommandService.ArrayOfGuid();
            java.util.List<java.lang.String> _returnHardwareInfoVal1DeviceIdsGuid = new java.util.ArrayList<java.lang.String>();
            _returnHardwareInfoVal1DeviceIds.getGuid().addAll(_returnHardwareInfoVal1DeviceIdsGuid);
            _returnHardwareInfoVal1.setDeviceIds(_returnHardwareInfoVal1DeviceIds);
            _returnHardwareInfoVal1.setRecorderId("RecorderId864036027");
            _returnHardwareInfoVal1.setName("Name-1850436637");
            _returnHardwareInfoVal1.setDescription("Description-1519303772");
            _returnHardwareInfoVal1.setUri("Uri479977960");
            _returnHardwareInfoVal1.setInterconnected(true);
            _returnHardwareInfoVal1.setLastModified(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.658-04:00"));
            _returnHardwareInfo.add(_returnHardwareInfoVal1);
            _return.getHardwareInfo().addAll(_returnHardwareInfo);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#getViewGroups(java.lang.String  token )*
     */
    public com.mile.ServerCommandService.ArrayOfViewGroupInfo getViewGroups(java.lang.String token) { 
        LOG.info("Executing operation getViewGroups");
        System.out.println(token);
        try {
            com.mile.ServerCommandService.ArrayOfViewGroupInfo _return = new com.mile.ServerCommandService.ArrayOfViewGroupInfo();
            java.util.List<com.mile.ServerCommandService.ViewGroupInfo> _returnViewGroupInfo = new java.util.ArrayList<com.mile.ServerCommandService.ViewGroupInfo>();
            com.mile.ServerCommandService.ViewGroupInfo _returnViewGroupInfoVal1 = new com.mile.ServerCommandService.ViewGroupInfo();
            _returnViewGroupInfoVal1.setId("Id-429560590");
            _returnViewGroupInfoVal1.setName("Name-96674228");
            com.mile.ServerCommandService.ViewGroupType _returnViewGroupInfoVal1ViewGroupType = com.mile.ServerCommandService.ViewGroupType.NORMAL;
            _returnViewGroupInfoVal1.setViewGroupType(_returnViewGroupInfoVal1ViewGroupType);
            _returnViewGroupInfoVal1.setReadOnly(true);
            _returnViewGroupInfoVal1.setLastModifiedTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.659-04:00"));
            _returnViewGroupInfoVal1.setLastModifiedUser("LastModifiedUser-1548269365");
            _returnViewGroupInfo.add(_returnViewGroupInfoVal1);
            _return.getViewGroupInfo().addAll(_returnViewGroupInfo);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#bookmarkGetNewReference(java.lang.String  token ,)java.lang.String  deviceId ,)boolean  live )*
     */
    public com.mile.ServerCommandService.BookmarkReference bookmarkGetNewReference(java.lang.String token,java.lang.String deviceId,boolean live) { 
        LOG.info("Executing operation bookmarkGetNewReference");
        System.out.println(token);
        System.out.println(deviceId);
        System.out.println(live);
        try {
            com.mile.ServerCommandService.BookmarkReference _return = new com.mile.ServerCommandService.BookmarkReference();
            _return.setReference("Reference1572769579");
            _return.setTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.660-04:00"));
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#getPresets(java.lang.String  token ,)java.lang.String  deviceId )*
     */
    public com.mile.ServerCommandService.ArrayOfPresetInfo getPresets(java.lang.String token,java.lang.String deviceId) { 
        LOG.info("Executing operation getPresets");
        System.out.println(token);
        System.out.println(deviceId);
        try {
            com.mile.ServerCommandService.ArrayOfPresetInfo _return = new com.mile.ServerCommandService.ArrayOfPresetInfo();
            java.util.List<com.mile.ServerCommandService.PresetInfo> _returnPresetInfo = new java.util.ArrayList<com.mile.ServerCommandService.PresetInfo>();
            com.mile.ServerCommandService.PresetInfo _returnPresetInfoVal1 = new com.mile.ServerCommandService.PresetInfo();
            _returnPresetInfoVal1.setName("Name1905710512");
            com.mile.ServerCommandService.PositionInfo _returnPresetInfoVal1Position = new com.mile.ServerCommandService.PositionInfo();
            _returnPresetInfoVal1Position.setPan(0.7100953135062849);
            _returnPresetInfoVal1Position.setTilt(0.8454713198790119);
            _returnPresetInfoVal1Position.setZoom(0.3865909196819244);
            _returnPresetInfoVal1.setPosition(_returnPresetInfoVal1Position);
            _returnPresetInfoVal1.setShortcut("Shortcut754073258");
            _returnPresetInfoVal1.setId("Id-1928296206");
            _returnPresetInfoVal1.setLocked(false);
            _returnPresetInfo.add(_returnPresetInfoVal1);
            _return.getPresetInfo().addAll(_returnPresetInfo);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#bookmarkSearchTime(java.lang.String  token ,)javax.xml.datatype.XMLGregorianCalendar  time ,)com.mile.ServerCommandService.TimeDuration  timeLimit ,)int  countLimit ,)com.mile.ServerCommandService.ArrayOfMediaDeviceType  deviceTypes ,)com.mile.ServerCommandService.ArrayOfGuid  optDeviceIds ,)com.mile.ServerCommandService.ArrayOfString  optUsers ,)java.lang.String  optSearchStr )*
     */
    public com.mile.ServerCommandService.ArrayOfBookmark bookmarkSearchTime(java.lang.String token,javax.xml.datatype.XMLGregorianCalendar time,com.mile.ServerCommandService.TimeDuration timeLimit,int countLimit,com.mile.ServerCommandService.ArrayOfMediaDeviceType deviceTypes,com.mile.ServerCommandService.ArrayOfGuid optDeviceIds,com.mile.ServerCommandService.ArrayOfString optUsers,java.lang.String optSearchStr) { 
        LOG.info("Executing operation bookmarkSearchTime");
        System.out.println(token);
        System.out.println(time);
        System.out.println(timeLimit);
        System.out.println(countLimit);
        System.out.println(deviceTypes);
        System.out.println(optDeviceIds);
        System.out.println(optUsers);
        System.out.println(optSearchStr);
        try {
            com.mile.ServerCommandService.ArrayOfBookmark _return = new com.mile.ServerCommandService.ArrayOfBookmark();
            java.util.List<com.mile.ServerCommandService.Bookmark> _returnBookmark = new java.util.ArrayList<com.mile.ServerCommandService.Bookmark>();
            com.mile.ServerCommandService.Bookmark _returnBookmarkVal1 = new com.mile.ServerCommandService.Bookmark();
            _returnBookmarkVal1.setId("Id1686078623");
            _returnBookmarkVal1.setDeviceId("DeviceId1475695477");
            _returnBookmarkVal1.setReference("Reference477711279");
            _returnBookmarkVal1.setHeader("Header-1645178389");
            _returnBookmarkVal1.setDescription("Description-2011311353");
            _returnBookmarkVal1.setUser("User341732281");
            _returnBookmarkVal1.setTimeBegin(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.662-04:00"));
            _returnBookmarkVal1.setTimeTrigged(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.662-04:00"));
            _returnBookmarkVal1.setTimeEnd(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.663-04:00"));
            _returnBookmark.add(_returnBookmarkVal1);
            _return.getBookmark().addAll(_returnBookmark);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#markedDataGetNewReference(java.lang.String  token ,)com.mile.ServerCommandService.ArrayOfGuid  deviceIds ,)boolean  live )*
     */
    public com.mile.ServerCommandService.MarkedDataReference markedDataGetNewReference(java.lang.String token,com.mile.ServerCommandService.ArrayOfGuid deviceIds,boolean live) { 
        LOG.info("Executing operation markedDataGetNewReference");
        System.out.println(token);
        System.out.println(deviceIds);
        System.out.println(live);
        try {
            com.mile.ServerCommandService.MarkedDataReference _return = new com.mile.ServerCommandService.MarkedDataReference();
            _return.setReference("Reference-1268946984");
            _return.setTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.664-04:00"));
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#getClientProfile(java.lang.String  token ,)boolean  withSetting )*
     */
    public com.mile.ServerCommandService.ClientProfile getClientProfile(java.lang.String token,boolean withSetting) { 
        LOG.info("Executing operation getClientProfile");
        System.out.println(token);
        System.out.println(withSetting);
        try {
            com.mile.ServerCommandService.ClientProfile _return = new com.mile.ServerCommandService.ClientProfile();
            _return.setId("Id1544676511");
            _return.setName("Name-754378526");
            _return.setDescription("Description-1232756379");
            _return.setLastModified(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.665-04:00"));
            _return.setSettingsLastModified(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.666-04:00"));
            com.mile.ServerCommandService.ArrayOfClientProfileSetting _returnClientProfileSettings = new com.mile.ServerCommandService.ArrayOfClientProfileSetting();
            java.util.List<com.mile.ServerCommandService.ClientProfileSetting> _returnClientProfileSettingsClientProfileSetting = new java.util.ArrayList<com.mile.ServerCommandService.ClientProfileSetting>();
            com.mile.ServerCommandService.ClientProfileSetting _returnClientProfileSettingsClientProfileSettingVal1 = new com.mile.ServerCommandService.ClientProfileSetting();
            _returnClientProfileSettingsClientProfileSettingVal1.setKey("Key2097569227");
            _returnClientProfileSettingsClientProfileSettingVal1.setValue("Value-559462308");
            _returnClientProfileSettingsClientProfileSettingVal1.setLocked(true);
            _returnClientProfileSettingsClientProfileSetting.add(_returnClientProfileSettingsClientProfileSettingVal1);
            _returnClientProfileSettings.getClientProfileSetting().addAll(_returnClientProfileSettingsClientProfileSetting);
            _return.setClientProfileSettings(_returnClientProfileSettings);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#bookmarkUpdate(java.lang.String  token ,)java.lang.String  bookmarkId ,)java.lang.String  deviceId ,)javax.xml.datatype.XMLGregorianCalendar  timeBegin ,)javax.xml.datatype.XMLGregorianCalendar  timeTrigged ,)javax.xml.datatype.XMLGregorianCalendar  timeEnd ,)java.lang.String  reference ,)java.lang.String  header ,)java.lang.String  description )*
     */
    public com.mile.ServerCommandService.Bookmark bookmarkUpdate(java.lang.String token,java.lang.String bookmarkId,java.lang.String deviceId,javax.xml.datatype.XMLGregorianCalendar timeBegin,javax.xml.datatype.XMLGregorianCalendar timeTrigged,javax.xml.datatype.XMLGregorianCalendar timeEnd,java.lang.String reference,java.lang.String header,java.lang.String description) { 
        LOG.info("Executing operation bookmarkUpdate");
        System.out.println(token);
        System.out.println(bookmarkId);
        System.out.println(deviceId);
        System.out.println(timeBegin);
        System.out.println(timeTrigged);
        System.out.println(timeEnd);
        System.out.println(reference);
        System.out.println(header);
        System.out.println(description);
        try {
            com.mile.ServerCommandService.Bookmark _return = new com.mile.ServerCommandService.Bookmark();
            _return.setId("Id1527967112");
            _return.setDeviceId("DeviceId1935576719");
            _return.setReference("Reference77073080");
            _return.setHeader("Header-1817400177");
            _return.setDescription("Description-1639943895");
            _return.setUser("User-116869608");
            _return.setTimeBegin(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.667-04:00"));
            _return.setTimeTrigged(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.667-04:00"));
            _return.setTimeEnd(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.668-04:00"));
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#getProductInfo(*
     */
    public com.mile.ServerCommandService.ProductInfo getProductInfo() { 
        LOG.info("Executing operation getProductInfo");
        try {
            com.mile.ServerCommandService.ProductInfo _return = new com.mile.ServerCommandService.ProductInfo();
            _return.setProductName("ProductName574976351");
            _return.setProductLine("ProductLine753050585");
            _return.setVendorId("VendorId1891104599");
            _return.setSubProduct("SubProduct-1140963896");
            _return.setMajorVersion("MajorVersion-822485945");
            _return.setMinorVersion("MinorVersion-750453876");
            _return.setServiceVersion("ServiceVersion352191614");
            _return.setBuildConfiguration("BuildConfiguration-967154887");
            _return.setBuildNumber("BuildNumber-739551449");
            _return.setBuildDate(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.669-04:00"));
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#createPreset(java.lang.String  token ,)java.lang.String  deviceId ,)java.lang.String  name )*
     */
    public java.lang.String createPreset(java.lang.String token,java.lang.String deviceId,java.lang.String name) { 
        LOG.info("Executing operation createPreset");
        System.out.println(token);
        System.out.println(deviceId);
        System.out.println(name);
        try {
            java.lang.String _return = "_return170364050";
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#isOnline(*
     */
    public boolean isOnline() { 
        LOG.info("Executing operation isOnline");
        try {
            boolean _return = false;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#queryRecorderInfo(java.lang.String  token ,)java.lang.String  recorderId )*
     */
    public com.mile.ServerCommandService.RecorderInfo queryRecorderInfo(java.lang.String token,java.lang.String recorderId) { 
        LOG.info("Executing operation queryRecorderInfo");
        System.out.println(token);
        System.out.println(recorderId);
        try {
            com.mile.ServerCommandService.RecorderInfo _return = new com.mile.ServerCommandService.RecorderInfo();
            _return.setRecorderId("RecorderId-988836039");
            _return.setServiceId("ServiceId-346993111");
            _return.setName("Name1255853156");
            _return.setDescription("Description888175859");
            _return.setHostName("HostName-1281214187");
            _return.setWebServerUri("WebServerUri970217950");
            _return.setTimeZoneName("TimeZoneName-948773903");
            _return.setDefaultRecordingTimeSeconds(-556981408);
            _return.setXmlEncoding("XmlEncoding1810022938");
            _return.setLastModified(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.670-04:00"));
            com.mile.ServerCommandService.ArrayOfCameraInfo _returnCameras = new com.mile.ServerCommandService.ArrayOfCameraInfo();
            java.util.List<com.mile.ServerCommandService.CameraInfo> _returnCamerasCameraInfo = new java.util.ArrayList<com.mile.ServerCommandService.CameraInfo>();
            com.mile.ServerCommandService.CameraInfo _returnCamerasCameraInfoVal1 = new com.mile.ServerCommandService.CameraInfo();
            _returnCamerasCameraInfoVal1.setRecorderId("RecorderId1436178033");
            _returnCamerasCameraInfoVal1.setHardwareId("HardwareId-1011474236");
            _returnCamerasCameraInfoVal1.setDeviceId("DeviceId-1886879124");
            _returnCamerasCameraInfoVal1.setName("Name793097560");
            _returnCamerasCameraInfoVal1.setDescription("Description1671445023");
            _returnCamerasCameraInfoVal1.setShortcut("Shortcut368692325");
            _returnCamerasCameraInfoVal1.setDeviceIndex(-128095486);
            _returnCamerasCameraInfoVal1.setMaxFPS(0.20363185049572408);
            _returnCamerasCameraInfoVal1.setBrowsableStream(false);
            com.mile.ServerCommandService.ArrayOfStreamInfo _returnCamerasCameraInfoVal1Streams = new com.mile.ServerCommandService.ArrayOfStreamInfo();
            java.util.List<com.mile.ServerCommandService.StreamInfo> _returnCamerasCameraInfoVal1StreamsStreamInfo = new java.util.ArrayList<com.mile.ServerCommandService.StreamInfo>();
            _returnCamerasCameraInfoVal1Streams.getStreamInfo().addAll(_returnCamerasCameraInfoVal1StreamsStreamInfo);
            _returnCamerasCameraInfoVal1.setStreams(_returnCamerasCameraInfoVal1Streams);
            com.mile.ServerCommandService.ArrayOfTrackInfo _returnCamerasCameraInfoVal1Tracks = new com.mile.ServerCommandService.ArrayOfTrackInfo();
            java.util.List<com.mile.ServerCommandService.TrackInfo> _returnCamerasCameraInfoVal1TracksTrackInfo = new java.util.ArrayList<com.mile.ServerCommandService.TrackInfo>();
            _returnCamerasCameraInfoVal1Tracks.getTrackInfo().addAll(_returnCamerasCameraInfoVal1TracksTrackInfo);
            _returnCamerasCameraInfoVal1.setTracks(_returnCamerasCameraInfoVal1Tracks);
            com.mile.ServerCommandService.CameraSecurityInfo _returnCamerasCameraInfoVal1CameraSecurity = new com.mile.ServerCommandService.CameraSecurityInfo();
            _returnCamerasCameraInfoVal1CameraSecurity.setLive(true);
            _returnCamerasCameraInfoVal1CameraSecurity.setBrowse(true);
            _returnCamerasCameraInfoVal1CameraSecurity.setExportAvi(true);
            _returnCamerasCameraInfoVal1CameraSecurity.setExportJpeg(true);
            _returnCamerasCameraInfoVal1CameraSecurity.setSmartSearch(false);
            _returnCamerasCameraInfoVal1CameraSecurity.setGetSequences(false);
            _returnCamerasCameraInfoVal1CameraSecurity.setExportDatabase(false);
            _returnCamerasCameraInfoVal1CameraSecurity.setStartRecording(true);
            _returnCamerasCameraInfoVal1CameraSecurity.setStopRecording(true);
            com.mile.ServerCommandService.PtzSecurityInfo _returnCamerasCameraInfoVal1CameraSecurityPtzSecurity = new com.mile.ServerCommandService.PtzSecurityInfo();
            _returnCamerasCameraInfoVal1CameraSecurityPtzSecurity.setManualControl(false);
            _returnCamerasCameraInfoVal1CameraSecurityPtzSecurity.setPresetControl(true);
            _returnCamerasCameraInfoVal1CameraSecurityPtzSecurity.setReserveControl(true);
            _returnCamerasCameraInfoVal1CameraSecurity.setPtzSecurity(_returnCamerasCameraInfoVal1CameraSecurityPtzSecurity);
            _returnCamerasCameraInfoVal1CameraSecurity.setBookmarkView(false);
            _returnCamerasCameraInfoVal1CameraSecurity.setBookmarkAdd(true);
            _returnCamerasCameraInfoVal1CameraSecurity.setBookmarkEdit(false);
            _returnCamerasCameraInfoVal1CameraSecurity.setBookmarkDelete(true);
            _returnCamerasCameraInfoVal1CameraSecurity.setRetentionView(true);
            _returnCamerasCameraInfoVal1CameraSecurity.setRetentionCreate(false);
            _returnCamerasCameraInfoVal1CameraSecurity.setRetentionRemove(true);
            _returnCamerasCameraInfoVal1CameraSecurity.setManagePresets(false);
            _returnCamerasCameraInfoVal1CameraSecurity.setManagePatrollingProfiles(false);
            _returnCamerasCameraInfoVal1CameraSecurity.setManagePresetLocks(true);
            _returnCamerasCameraInfoVal1CameraSecurity.setRetrieveEdgeRecordings(false);
            _returnCamerasCameraInfoVal1.setCameraSecurity(_returnCamerasCameraInfoVal1CameraSecurity);
            com.mile.ServerCommandService.PtzInfo _returnCamerasCameraInfoVal1PtzSettings = new com.mile.ServerCommandService.PtzInfo();
            _returnCamerasCameraInfoVal1PtzSettings.setPtzEnabled(false);
            com.mile.ServerCommandService.ArrayOfPresetInfo _returnCamerasCameraInfoVal1PtzSettingsPresets = new com.mile.ServerCommandService.ArrayOfPresetInfo();
            java.util.List<com.mile.ServerCommandService.PresetInfo> _returnCamerasCameraInfoVal1PtzSettingsPresetsPresetInfo = new java.util.ArrayList<com.mile.ServerCommandService.PresetInfo>();
            _returnCamerasCameraInfoVal1PtzSettingsPresets.getPresetInfo().addAll(_returnCamerasCameraInfoVal1PtzSettingsPresetsPresetInfo);
            _returnCamerasCameraInfoVal1PtzSettings.setPresets(_returnCamerasCameraInfoVal1PtzSettingsPresets);
            com.mile.ServerCommandService.ArrayOfCapabilityInfo _returnCamerasCameraInfoVal1PtzSettingsCapabilities = new com.mile.ServerCommandService.ArrayOfCapabilityInfo();
            java.util.List<com.mile.ServerCommandService.CapabilityInfo> _returnCamerasCameraInfoVal1PtzSettingsCapabilitiesCapabilityInfo = new java.util.ArrayList<com.mile.ServerCommandService.CapabilityInfo>();
            _returnCamerasCameraInfoVal1PtzSettingsCapabilities.getCapabilityInfo().addAll(_returnCamerasCameraInfoVal1PtzSettingsCapabilitiesCapabilityInfo);
            _returnCamerasCameraInfoVal1PtzSettings.setCapabilities(_returnCamerasCameraInfoVal1PtzSettingsCapabilities);
            _returnCamerasCameraInfoVal1PtzSettings.setIsCenterOnPositionInViewSupported(false);
            _returnCamerasCameraInfoVal1PtzSettings.setIsPtzCenterAndZoomToRectangleSupported(false);
            _returnCamerasCameraInfoVal1PtzSettings.setIsPtzHomeSupported(true);
            _returnCamerasCameraInfoVal1PtzSettings.setIsPtzDiagonalSupported(false);
            _returnCamerasCameraInfoVal1PtzSettings.setEditPreset(false);
            _returnCamerasCameraInfoVal1.setPtzSettings(_returnCamerasCameraInfoVal1PtzSettings);
            com.mile.ServerCommandService.IpixInfo _returnCamerasCameraInfoVal1IpixSettings = new com.mile.ServerCommandService.IpixInfo();
            _returnCamerasCameraInfoVal1IpixSettings.setIpixEnabled(false);
            com.mile.ServerCommandService.HemisphereInfo _returnCamerasCameraInfoVal1IpixSettingsHemisphere = new com.mile.ServerCommandService.HemisphereInfo();
            _returnCamerasCameraInfoVal1IpixSettingsHemisphere.setRadiusX(0.2545301631857637);
            _returnCamerasCameraInfoVal1IpixSettingsHemisphere.setRadiusY(0.7628652540997966);
            _returnCamerasCameraInfoVal1IpixSettingsHemisphere.setCenterX(0.08632795160040674);
            _returnCamerasCameraInfoVal1IpixSettingsHemisphere.setCenterY(0.5310169622239753);
            _returnCamerasCameraInfoVal1IpixSettings.setHemisphere(_returnCamerasCameraInfoVal1IpixSettingsHemisphere);
            com.mile.ServerCommandService.PositionInfo _returnCamerasCameraInfoVal1IpixSettingsHomeposition = new com.mile.ServerCommandService.PositionInfo();
            _returnCamerasCameraInfoVal1IpixSettingsHomeposition.setPan(0.6386966746629215);
            _returnCamerasCameraInfoVal1IpixSettingsHomeposition.setTilt(0.13531981113376823);
            _returnCamerasCameraInfoVal1IpixSettingsHomeposition.setZoom(0.8774715355493856);
            _returnCamerasCameraInfoVal1IpixSettings.setHomeposition(_returnCamerasCameraInfoVal1IpixSettingsHomeposition);
            _returnCamerasCameraInfoVal1IpixSettings.setCeilingMounted(true);
            _returnCamerasCameraInfoVal1.setIpixSettings(_returnCamerasCameraInfoVal1IpixSettings);
            com.mile.ServerCommandService.PanoramicLensInfo _returnCamerasCameraInfoVal1PanoramicLensSettings = new com.mile.ServerCommandService.PanoramicLensInfo();
            _returnCamerasCameraInfoVal1PanoramicLensSettings.setPanoramicLensEnabled(true);
            _returnCamerasCameraInfoVal1PanoramicLensSettings.setPanoramicLensType("PanoramicLensType1174782297");
            _returnCamerasCameraInfoVal1PanoramicLensSettings.setCameraMount("CameraMount735586807");
            com.mile.ServerCommandService.ImmerVisionInfo _returnCamerasCameraInfoVal1PanoramicLensSettingsImmerVision = new com.mile.ServerCommandService.ImmerVisionInfo();
            _returnCamerasCameraInfoVal1PanoramicLensSettingsImmerVision.setLensProfileRpl("LensProfileRpl382375873");
            _returnCamerasCameraInfoVal1PanoramicLensSettingsImmerVision.setLensProfileName("LensProfileName1443687506");
            _returnCamerasCameraInfoVal1PanoramicLensSettingsImmerVision.setLensProfileData("LensProfileData-206496601");
            _returnCamerasCameraInfoVal1PanoramicLensSettings.setImmerVision(_returnCamerasCameraInfoVal1PanoramicLensSettingsImmerVision);
            _returnCamerasCameraInfoVal1.setPanoramicLensSettings(_returnCamerasCameraInfoVal1PanoramicLensSettings);
            _returnCamerasCameraInfoVal1.setMulticastEnabled(true);
            _returnCamerasCameraInfoVal1.setEdgeStorageSupported(false);
            _returnCamerasCameraInfoVal1.setEdgeStoragePlayback(false);
            _returnCamerasCameraInfoVal1.setStopManualRecordingSeconds(-1991663407);
            _returnCamerasCameraInfo.add(_returnCamerasCameraInfoVal1);
            _returnCameras.getCameraInfo().addAll(_returnCamerasCameraInfo);
            _return.setCameras(_returnCameras);
            com.mile.ServerCommandService.ArrayOfInputInfo _returnInputs = new com.mile.ServerCommandService.ArrayOfInputInfo();
            java.util.List<com.mile.ServerCommandService.InputInfo> _returnInputsInputInfo = new java.util.ArrayList<com.mile.ServerCommandService.InputInfo>();
            com.mile.ServerCommandService.InputInfo _returnInputsInputInfoVal1 = new com.mile.ServerCommandService.InputInfo();
            _returnInputsInputInfoVal1.setRecorderId("RecorderId-390490890");
            _returnInputsInputInfoVal1.setHardwareId("HardwareId1133754812");
            _returnInputsInputInfoVal1.setDeviceId("DeviceId1869408441");
            _returnInputsInputInfoVal1.setName("Name427671206");
            _returnInputsInputInfoVal1.setDescription("Description62915176");
            _returnInputsInputInfoVal1.setShortcut("Shortcut42698837");
            _returnInputsInputInfoVal1.setDeviceIndex(1095605846);
            com.mile.ServerCommandService.InputSecurityInfo _returnInputsInputInfoVal1InputSecurity = new com.mile.ServerCommandService.InputSecurityInfo();
            _returnInputsInputInfoVal1InputSecurity.setReadInput(true);
            _returnInputsInputInfoVal1.setInputSecurity(_returnInputsInputInfoVal1InputSecurity);
            _returnInputsInputInfo.add(_returnInputsInputInfoVal1);
            _returnInputs.getInputInfo().addAll(_returnInputsInputInfo);
            _return.setInputs(_returnInputs);
            com.mile.ServerCommandService.ArrayOfOutputInfo _returnOutputs = new com.mile.ServerCommandService.ArrayOfOutputInfo();
            java.util.List<com.mile.ServerCommandService.OutputInfo> _returnOutputsOutputInfo = new java.util.ArrayList<com.mile.ServerCommandService.OutputInfo>();
            com.mile.ServerCommandService.OutputInfo _returnOutputsOutputInfoVal1 = new com.mile.ServerCommandService.OutputInfo();
            _returnOutputsOutputInfoVal1.setRecorderId("RecorderId1909172848");
            _returnOutputsOutputInfoVal1.setHardwareId("HardwareId-1274942209");
            _returnOutputsOutputInfoVal1.setDeviceId("DeviceId248317056");
            _returnOutputsOutputInfoVal1.setName("Name-1990120298");
            _returnOutputsOutputInfoVal1.setDescription("Description-2099060926");
            _returnOutputsOutputInfoVal1.setShortcut("Shortcut855481623");
            _returnOutputsOutputInfoVal1.setDeviceIndex(1843291089);
            com.mile.ServerCommandService.OutputSecurityInfo _returnOutputsOutputInfoVal1OutputSecurity = new com.mile.ServerCommandService.OutputSecurityInfo();
            _returnOutputsOutputInfoVal1OutputSecurity.setActivate(true);
            _returnOutputsOutputInfoVal1.setOutputSecurity(_returnOutputsOutputInfoVal1OutputSecurity);
            _returnOutputsOutputInfo.add(_returnOutputsOutputInfoVal1);
            _returnOutputs.getOutputInfo().addAll(_returnOutputsOutputInfo);
            _return.setOutputs(_returnOutputs);
            com.mile.ServerCommandService.ArrayOfMicrophoneInfo _returnMicrophones = new com.mile.ServerCommandService.ArrayOfMicrophoneInfo();
            java.util.List<com.mile.ServerCommandService.MicrophoneInfo> _returnMicrophonesMicrophoneInfo = new java.util.ArrayList<com.mile.ServerCommandService.MicrophoneInfo>();
            com.mile.ServerCommandService.MicrophoneInfo _returnMicrophonesMicrophoneInfoVal1 = new com.mile.ServerCommandService.MicrophoneInfo();
            _returnMicrophonesMicrophoneInfoVal1.setRecorderId("RecorderId-486152452");
            _returnMicrophonesMicrophoneInfoVal1.setHardwareId("HardwareId1418305078");
            _returnMicrophonesMicrophoneInfoVal1.setDeviceId("DeviceId-1638320520");
            _returnMicrophonesMicrophoneInfoVal1.setName("Name943107355");
            _returnMicrophonesMicrophoneInfoVal1.setDescription("Description-1420482547");
            _returnMicrophonesMicrophoneInfoVal1.setShortcut("Shortcut621282506");
            _returnMicrophonesMicrophoneInfoVal1.setDeviceIndex(98387257);
            com.mile.ServerCommandService.ArrayOfTrackInfo _returnMicrophonesMicrophoneInfoVal1Tracks = new com.mile.ServerCommandService.ArrayOfTrackInfo();
            java.util.List<com.mile.ServerCommandService.TrackInfo> _returnMicrophonesMicrophoneInfoVal1TracksTrackInfo = new java.util.ArrayList<com.mile.ServerCommandService.TrackInfo>();
            _returnMicrophonesMicrophoneInfoVal1Tracks.getTrackInfo().addAll(_returnMicrophonesMicrophoneInfoVal1TracksTrackInfo);
            _returnMicrophonesMicrophoneInfoVal1.setTracks(_returnMicrophonesMicrophoneInfoVal1Tracks);
            com.mile.ServerCommandService.MicrophoneSecurityInfo _returnMicrophonesMicrophoneInfoVal1MicrophoneSecurity = new com.mile.ServerCommandService.MicrophoneSecurityInfo();
            _returnMicrophonesMicrophoneInfoVal1MicrophoneSecurity.setLive(true);
            _returnMicrophonesMicrophoneInfoVal1MicrophoneSecurity.setBrowse(true);
            _returnMicrophonesMicrophoneInfoVal1MicrophoneSecurity.setGetSequences(false);
            _returnMicrophonesMicrophoneInfoVal1MicrophoneSecurity.setExportDatabase(true);
            _returnMicrophonesMicrophoneInfoVal1MicrophoneSecurity.setBookmarkView(false);
            _returnMicrophonesMicrophoneInfoVal1MicrophoneSecurity.setBookmarkAdd(true);
            _returnMicrophonesMicrophoneInfoVal1MicrophoneSecurity.setBookmarkEdit(true);
            _returnMicrophonesMicrophoneInfoVal1MicrophoneSecurity.setBookmarkDelete(true);
            _returnMicrophonesMicrophoneInfoVal1MicrophoneSecurity.setRetentionView(true);
            _returnMicrophonesMicrophoneInfoVal1MicrophoneSecurity.setRetentionCreate(false);
            _returnMicrophonesMicrophoneInfoVal1MicrophoneSecurity.setRetentionRemove(false);
            _returnMicrophonesMicrophoneInfoVal1MicrophoneSecurity.setRetrieveEdgeRecordings(true);
            _returnMicrophonesMicrophoneInfoVal1MicrophoneSecurity.setStartRecording(true);
            _returnMicrophonesMicrophoneInfoVal1MicrophoneSecurity.setStopRecording(true);
            _returnMicrophonesMicrophoneInfoVal1.setMicrophoneSecurity(_returnMicrophonesMicrophoneInfoVal1MicrophoneSecurity);
            _returnMicrophonesMicrophoneInfoVal1.setMulticastEnabled(false);
            _returnMicrophonesMicrophoneInfoVal1.setEdgeStorageSupported(false);
            _returnMicrophonesMicrophoneInfoVal1.setEdgeStoragePlayback(false);
            _returnMicrophonesMicrophoneInfoVal1.setStopManualRecordingSeconds(789655940);
            _returnMicrophonesMicrophoneInfo.add(_returnMicrophonesMicrophoneInfoVal1);
            _returnMicrophones.getMicrophoneInfo().addAll(_returnMicrophonesMicrophoneInfo);
            _return.setMicrophones(_returnMicrophones);
            com.mile.ServerCommandService.ArrayOfSpeakerInfo _returnSpeakers = new com.mile.ServerCommandService.ArrayOfSpeakerInfo();
            java.util.List<com.mile.ServerCommandService.SpeakerInfo> _returnSpeakersSpeakerInfo = new java.util.ArrayList<com.mile.ServerCommandService.SpeakerInfo>();
            com.mile.ServerCommandService.SpeakerInfo _returnSpeakersSpeakerInfoVal1 = new com.mile.ServerCommandService.SpeakerInfo();
            _returnSpeakersSpeakerInfoVal1.setRecorderId("RecorderId1208036022");
            _returnSpeakersSpeakerInfoVal1.setHardwareId("HardwareId-598738491");
            _returnSpeakersSpeakerInfoVal1.setDeviceId("DeviceId419724003");
            _returnSpeakersSpeakerInfoVal1.setName("Name2022234858");
            _returnSpeakersSpeakerInfoVal1.setDescription("Description-1272251280");
            _returnSpeakersSpeakerInfoVal1.setShortcut("Shortcut-1347438162");
            _returnSpeakersSpeakerInfoVal1.setDeviceIndex(-728473998);
            com.mile.ServerCommandService.ArrayOfTrackInfo _returnSpeakersSpeakerInfoVal1Tracks = new com.mile.ServerCommandService.ArrayOfTrackInfo();
            java.util.List<com.mile.ServerCommandService.TrackInfo> _returnSpeakersSpeakerInfoVal1TracksTrackInfo = new java.util.ArrayList<com.mile.ServerCommandService.TrackInfo>();
            _returnSpeakersSpeakerInfoVal1Tracks.getTrackInfo().addAll(_returnSpeakersSpeakerInfoVal1TracksTrackInfo);
            _returnSpeakersSpeakerInfoVal1.setTracks(_returnSpeakersSpeakerInfoVal1Tracks);
            com.mile.ServerCommandService.SpeakerSecurityInfo _returnSpeakersSpeakerInfoVal1SpeakerSecurity = new com.mile.ServerCommandService.SpeakerSecurityInfo();
            _returnSpeakersSpeakerInfoVal1SpeakerSecurity.setLive(true);
            _returnSpeakersSpeakerInfoVal1SpeakerSecurity.setBrowse(false);
            _returnSpeakersSpeakerInfoVal1SpeakerSecurity.setSpeak(true);
            _returnSpeakersSpeakerInfoVal1SpeakerSecurity.setGetSequences(true);
            _returnSpeakersSpeakerInfoVal1SpeakerSecurity.setExportDatabase(false);
            _returnSpeakersSpeakerInfoVal1SpeakerSecurity.setBookmarkView(true);
            _returnSpeakersSpeakerInfoVal1SpeakerSecurity.setBookmarkAdd(false);
            _returnSpeakersSpeakerInfoVal1SpeakerSecurity.setBookmarkEdit(false);
            _returnSpeakersSpeakerInfoVal1SpeakerSecurity.setBookmarkDelete(true);
            _returnSpeakersSpeakerInfoVal1SpeakerSecurity.setRetentionView(false);
            _returnSpeakersSpeakerInfoVal1SpeakerSecurity.setRetentionCreate(false);
            _returnSpeakersSpeakerInfoVal1SpeakerSecurity.setRetentionRemove(true);
            _returnSpeakersSpeakerInfoVal1SpeakerSecurity.setRetrieveEdgeRecordings(false);
            _returnSpeakersSpeakerInfoVal1SpeakerSecurity.setStartRecording(false);
            _returnSpeakersSpeakerInfoVal1SpeakerSecurity.setStopRecording(false);
            _returnSpeakersSpeakerInfoVal1.setSpeakerSecurity(_returnSpeakersSpeakerInfoVal1SpeakerSecurity);
            _returnSpeakersSpeakerInfoVal1.setMulticastEnabled(true);
            _returnSpeakersSpeakerInfoVal1.setEdgeStorageSupported(true);
            _returnSpeakersSpeakerInfoVal1.setEdgeStoragePlayback(true);
            _returnSpeakersSpeakerInfoVal1.setStopManualRecordingSeconds(-612444925);
            _returnSpeakersSpeakerInfo.add(_returnSpeakersSpeakerInfoVal1);
            _returnSpeakers.getSpeakerInfo().addAll(_returnSpeakersSpeakerInfo);
            _return.setSpeakers(_returnSpeakers);
            com.mile.ServerCommandService.ArrayOfMetadataDeviceInfo _returnMetadataDevices = new com.mile.ServerCommandService.ArrayOfMetadataDeviceInfo();
            java.util.List<com.mile.ServerCommandService.MetadataDeviceInfo> _returnMetadataDevicesMetadataDeviceInfo = new java.util.ArrayList<com.mile.ServerCommandService.MetadataDeviceInfo>();
            com.mile.ServerCommandService.MetadataDeviceInfo _returnMetadataDevicesMetadataDeviceInfoVal1 = new com.mile.ServerCommandService.MetadataDeviceInfo();
            _returnMetadataDevicesMetadataDeviceInfoVal1.setRecorderId("RecorderId-2113427567");
            _returnMetadataDevicesMetadataDeviceInfoVal1.setHardwareId("HardwareId-1004723665");
            _returnMetadataDevicesMetadataDeviceInfoVal1.setDeviceId("DeviceId2140320478");
            _returnMetadataDevicesMetadataDeviceInfoVal1.setName("Name-782664657");
            _returnMetadataDevicesMetadataDeviceInfoVal1.setDescription("Description-1443635098");
            _returnMetadataDevicesMetadataDeviceInfoVal1.setShortcut("Shortcut-867566967");
            _returnMetadataDevicesMetadataDeviceInfoVal1.setDeviceIndex(-647806041);
            com.mile.ServerCommandService.ArrayOfTrackInfo _returnMetadataDevicesMetadataDeviceInfoVal1Tracks = new com.mile.ServerCommandService.ArrayOfTrackInfo();
            java.util.List<com.mile.ServerCommandService.TrackInfo> _returnMetadataDevicesMetadataDeviceInfoVal1TracksTrackInfo = new java.util.ArrayList<com.mile.ServerCommandService.TrackInfo>();
            _returnMetadataDevicesMetadataDeviceInfoVal1Tracks.getTrackInfo().addAll(_returnMetadataDevicesMetadataDeviceInfoVal1TracksTrackInfo);
            _returnMetadataDevicesMetadataDeviceInfoVal1.setTracks(_returnMetadataDevicesMetadataDeviceInfoVal1Tracks);
            com.mile.ServerCommandService.MetadataDeviceSecurityInfo _returnMetadataDevicesMetadataDeviceInfoVal1MetadataDeviceSecurity = new com.mile.ServerCommandService.MetadataDeviceSecurityInfo();
            _returnMetadataDevicesMetadataDeviceInfoVal1MetadataDeviceSecurity.setLive(true);
            _returnMetadataDevicesMetadataDeviceInfoVal1MetadataDeviceSecurity.setBrowse(true);
            _returnMetadataDevicesMetadataDeviceInfoVal1MetadataDeviceSecurity.setGetSequences(false);
            _returnMetadataDevicesMetadataDeviceInfoVal1MetadataDeviceSecurity.setExportDatabase(true);
            _returnMetadataDevicesMetadataDeviceInfoVal1MetadataDeviceSecurity.setRetrieveEdgeRecordings(false);
            _returnMetadataDevicesMetadataDeviceInfoVal1MetadataDeviceSecurity.setStartRecording(true);
            _returnMetadataDevicesMetadataDeviceInfoVal1MetadataDeviceSecurity.setStopRecording(false);
            _returnMetadataDevicesMetadataDeviceInfoVal1MetadataDeviceSecurity.setRetentionView(false);
            _returnMetadataDevicesMetadataDeviceInfoVal1MetadataDeviceSecurity.setRetentionCreate(false);
            _returnMetadataDevicesMetadataDeviceInfoVal1MetadataDeviceSecurity.setRetentionRemove(true);
            _returnMetadataDevicesMetadataDeviceInfoVal1.setMetadataDeviceSecurity(_returnMetadataDevicesMetadataDeviceInfoVal1MetadataDeviceSecurity);
            _returnMetadataDevicesMetadataDeviceInfoVal1.setMulticastEnabled(true);
            _returnMetadataDevicesMetadataDeviceInfoVal1.setEdgeStorageSupported(false);
            _returnMetadataDevicesMetadataDeviceInfoVal1.setEdgeStoragePlayback(true);
            com.mile.ServerCommandService.ArrayOfMetadataTypeInfo _returnMetadataDevicesMetadataDeviceInfoVal1MetadataTypes = new com.mile.ServerCommandService.ArrayOfMetadataTypeInfo();
            java.util.List<com.mile.ServerCommandService.MetadataTypeInfo> _returnMetadataDevicesMetadataDeviceInfoVal1MetadataTypesMetadataTypeInfo = new java.util.ArrayList<com.mile.ServerCommandService.MetadataTypeInfo>();
            _returnMetadataDevicesMetadataDeviceInfoVal1MetadataTypes.getMetadataTypeInfo().addAll(_returnMetadataDevicesMetadataDeviceInfoVal1MetadataTypesMetadataTypeInfo);
            _returnMetadataDevicesMetadataDeviceInfoVal1.setMetadataTypes(_returnMetadataDevicesMetadataDeviceInfoVal1MetadataTypes);
            _returnMetadataDevicesMetadataDeviceInfoVal1.setStopManualRecordingSeconds(-387720269);
            _returnMetadataDevicesMetadataDeviceInfo.add(_returnMetadataDevicesMetadataDeviceInfoVal1);
            _returnMetadataDevices.getMetadataDeviceInfo().addAll(_returnMetadataDevicesMetadataDeviceInfo);
            _return.setMetadataDevices(_returnMetadataDevices);
            com.mile.ServerCommandService.ArrayOfHardwareInfo _returnHardware = new com.mile.ServerCommandService.ArrayOfHardwareInfo();
            java.util.List<com.mile.ServerCommandService.HardwareInfo> _returnHardwareHardwareInfo = new java.util.ArrayList<com.mile.ServerCommandService.HardwareInfo>();
            com.mile.ServerCommandService.HardwareInfo _returnHardwareHardwareInfoVal1 = new com.mile.ServerCommandService.HardwareInfo();
            _returnHardwareHardwareInfoVal1.setHardwareId("HardwareId-2145465376");
            com.mile.ServerCommandService.ArrayOfGuid _returnHardwareHardwareInfoVal1DeviceIds = new com.mile.ServerCommandService.ArrayOfGuid();
            java.util.List<java.lang.String> _returnHardwareHardwareInfoVal1DeviceIdsGuid = new java.util.ArrayList<java.lang.String>();
            _returnHardwareHardwareInfoVal1DeviceIds.getGuid().addAll(_returnHardwareHardwareInfoVal1DeviceIdsGuid);
            _returnHardwareHardwareInfoVal1.setDeviceIds(_returnHardwareHardwareInfoVal1DeviceIds);
            _returnHardwareHardwareInfoVal1.setRecorderId("RecorderId2019975325");
            _returnHardwareHardwareInfoVal1.setName("Name320919933");
            _returnHardwareHardwareInfoVal1.setDescription("Description1452912360");
            _returnHardwareHardwareInfoVal1.setUri("Uri-199421457");
            _returnHardwareHardwareInfoVal1.setInterconnected(false);
            _returnHardwareHardwareInfoVal1.setLastModified(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.680-04:00"));
            _returnHardwareHardwareInfo.add(_returnHardwareHardwareInfoVal1);
            _returnHardware.getHardwareInfo().addAll(_returnHardwareHardwareInfo);
            _return.setHardware(_returnHardware);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#getCustomSettingDataGlobal(java.lang.String  token ,)java.lang.String  customSettingId )*
     */
    public com.mile.ServerCommandService.CustomSetting getCustomSettingDataGlobal(java.lang.String token,java.lang.String customSettingId) { 
        LOG.info("Executing operation getCustomSettingDataGlobal");
        System.out.println(token);
        System.out.println(customSettingId);
        try {
            com.mile.ServerCommandService.CustomSetting _return = new com.mile.ServerCommandService.CustomSetting();
            com.mile.ServerCommandService.CustomSettingInfo _returnCustomSettingInfo = new com.mile.ServerCommandService.CustomSettingInfo();
            _returnCustomSettingInfo.setId("Id-621639058");
            _returnCustomSettingInfo.setLastModifiedTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.681-04:00"));
            _returnCustomSettingInfo.setLastModifiedUser("LastModifiedUser604902797");
            _return.setCustomSettingInfo(_returnCustomSettingInfo);
            com.mile.ServerCommandService.CustomSettingData _returnCustomSettingData = new com.mile.ServerCommandService.CustomSettingData();
            _returnCustomSettingData.setDataVersion(-1308448819);
            com.mile.ServerCommandService.CustomSettingData.CustomSettingDataXml _returnCustomSettingDataCustomSettingDataXml = new com.mile.ServerCommandService.CustomSettingData.CustomSettingDataXml();
            java.util.List<java.lang.Object> _returnCustomSettingDataCustomSettingDataXmlContent = new java.util.ArrayList<java.lang.Object>();
            _returnCustomSettingDataCustomSettingDataXml.getContent().addAll(_returnCustomSettingDataCustomSettingDataXmlContent);
            _returnCustomSettingData.setCustomSettingDataXml(_returnCustomSettingDataCustomSettingDataXml);
            _return.setCustomSettingData(_returnCustomSettingData);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#getConfigurationRecorders(java.lang.String  token ,)com.mile.ServerCommandService.ArrayOfGuid  recorderIds )*
     */
    public com.mile.ServerCommandService.ArrayOfRecorderInfo getConfigurationRecorders(java.lang.String token,com.mile.ServerCommandService.ArrayOfGuid recorderIds) { 
        LOG.info("Executing operation getConfigurationRecorders");
        System.out.println(token);
        System.out.println(recorderIds);
        try {
            com.mile.ServerCommandService.ArrayOfRecorderInfo _return = new com.mile.ServerCommandService.ArrayOfRecorderInfo();
            java.util.List<com.mile.ServerCommandService.RecorderInfo> _returnRecorderInfo = new java.util.ArrayList<com.mile.ServerCommandService.RecorderInfo>();
            com.mile.ServerCommandService.RecorderInfo _returnRecorderInfoVal1 = new com.mile.ServerCommandService.RecorderInfo();
            _returnRecorderInfoVal1.setRecorderId("RecorderId-1297290770");
            _returnRecorderInfoVal1.setServiceId("ServiceId1712517811");
            _returnRecorderInfoVal1.setName("Name1176340943");
            _returnRecorderInfoVal1.setDescription("Description1643337999");
            _returnRecorderInfoVal1.setHostName("HostName-1964594214");
            _returnRecorderInfoVal1.setWebServerUri("WebServerUri-698758848");
            _returnRecorderInfoVal1.setTimeZoneName("TimeZoneName1837037248");
            _returnRecorderInfoVal1.setDefaultRecordingTimeSeconds(1283468679);
            _returnRecorderInfoVal1.setXmlEncoding("XmlEncoding-1429048518");
            _returnRecorderInfoVal1.setLastModified(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.686-04:00"));
            com.mile.ServerCommandService.ArrayOfCameraInfo _returnRecorderInfoVal1Cameras = new com.mile.ServerCommandService.ArrayOfCameraInfo();
            java.util.List<com.mile.ServerCommandService.CameraInfo> _returnRecorderInfoVal1CamerasCameraInfo = new java.util.ArrayList<com.mile.ServerCommandService.CameraInfo>();
            _returnRecorderInfoVal1Cameras.getCameraInfo().addAll(_returnRecorderInfoVal1CamerasCameraInfo);
            _returnRecorderInfoVal1.setCameras(_returnRecorderInfoVal1Cameras);
            com.mile.ServerCommandService.ArrayOfInputInfo _returnRecorderInfoVal1Inputs = new com.mile.ServerCommandService.ArrayOfInputInfo();
            java.util.List<com.mile.ServerCommandService.InputInfo> _returnRecorderInfoVal1InputsInputInfo = new java.util.ArrayList<com.mile.ServerCommandService.InputInfo>();
            _returnRecorderInfoVal1Inputs.getInputInfo().addAll(_returnRecorderInfoVal1InputsInputInfo);
            _returnRecorderInfoVal1.setInputs(_returnRecorderInfoVal1Inputs);
            com.mile.ServerCommandService.ArrayOfOutputInfo _returnRecorderInfoVal1Outputs = new com.mile.ServerCommandService.ArrayOfOutputInfo();
            java.util.List<com.mile.ServerCommandService.OutputInfo> _returnRecorderInfoVal1OutputsOutputInfo = new java.util.ArrayList<com.mile.ServerCommandService.OutputInfo>();
            _returnRecorderInfoVal1Outputs.getOutputInfo().addAll(_returnRecorderInfoVal1OutputsOutputInfo);
            _returnRecorderInfoVal1.setOutputs(_returnRecorderInfoVal1Outputs);
            com.mile.ServerCommandService.ArrayOfMicrophoneInfo _returnRecorderInfoVal1Microphones = new com.mile.ServerCommandService.ArrayOfMicrophoneInfo();
            java.util.List<com.mile.ServerCommandService.MicrophoneInfo> _returnRecorderInfoVal1MicrophonesMicrophoneInfo = new java.util.ArrayList<com.mile.ServerCommandService.MicrophoneInfo>();
            _returnRecorderInfoVal1Microphones.getMicrophoneInfo().addAll(_returnRecorderInfoVal1MicrophonesMicrophoneInfo);
            _returnRecorderInfoVal1.setMicrophones(_returnRecorderInfoVal1Microphones);
            com.mile.ServerCommandService.ArrayOfSpeakerInfo _returnRecorderInfoVal1Speakers = new com.mile.ServerCommandService.ArrayOfSpeakerInfo();
            java.util.List<com.mile.ServerCommandService.SpeakerInfo> _returnRecorderInfoVal1SpeakersSpeakerInfo = new java.util.ArrayList<com.mile.ServerCommandService.SpeakerInfo>();
            _returnRecorderInfoVal1Speakers.getSpeakerInfo().addAll(_returnRecorderInfoVal1SpeakersSpeakerInfo);
            _returnRecorderInfoVal1.setSpeakers(_returnRecorderInfoVal1Speakers);
            com.mile.ServerCommandService.ArrayOfMetadataDeviceInfo _returnRecorderInfoVal1MetadataDevices = new com.mile.ServerCommandService.ArrayOfMetadataDeviceInfo();
            java.util.List<com.mile.ServerCommandService.MetadataDeviceInfo> _returnRecorderInfoVal1MetadataDevicesMetadataDeviceInfo = new java.util.ArrayList<com.mile.ServerCommandService.MetadataDeviceInfo>();
            _returnRecorderInfoVal1MetadataDevices.getMetadataDeviceInfo().addAll(_returnRecorderInfoVal1MetadataDevicesMetadataDeviceInfo);
            _returnRecorderInfoVal1.setMetadataDevices(_returnRecorderInfoVal1MetadataDevices);
            com.mile.ServerCommandService.ArrayOfHardwareInfo _returnRecorderInfoVal1Hardware = new com.mile.ServerCommandService.ArrayOfHardwareInfo();
            java.util.List<com.mile.ServerCommandService.HardwareInfo> _returnRecorderInfoVal1HardwareHardwareInfo = new java.util.ArrayList<com.mile.ServerCommandService.HardwareInfo>();
            _returnRecorderInfoVal1Hardware.getHardwareInfo().addAll(_returnRecorderInfoVal1HardwareHardwareInfo);
            _returnRecorderInfoVal1.setHardware(_returnRecorderInfoVal1Hardware);
            _returnRecorderInfo.add(_returnRecorderInfoVal1);
            _return.getRecorderInfo().addAll(_returnRecorderInfo);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#getSystemLicenseInfo(*
     */
    public com.mile.ServerCommandService.SystemLicenseInfo getSystemLicenseInfo() { 
        LOG.info("Executing operation getSystemLicenseInfo");
        try {
            com.mile.ServerCommandService.SystemLicenseInfo _return = new com.mile.ServerCommandService.SystemLicenseInfo();
            _return.setHasLicense(true);
            _return.setIsTrialLicense(true);
            _return.setSLC("SLC-772095182");
            _return.setProductSku("ProductSku304225464");
            _return.setExpires(false);
            _return.setExpiryDate(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.691-04:00"));
            com.mile.ServerCommandService.ArrayOfString _returnFeatures = new com.mile.ServerCommandService.ArrayOfString();
            java.util.List<java.lang.String> _returnFeaturesString = new java.util.ArrayList<java.lang.String>();
            java.lang.String _returnFeaturesStringVal1 = "_returnFeaturesStringVal885303383";
            _returnFeaturesString.add(_returnFeaturesStringVal1);
            _returnFeatures.getString().addAll(_returnFeaturesString);
            _return.setFeatures(_returnFeatures);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#alertsGetAroundWithSpan(java.lang.String  token ,)com.mile.ServerCommandService.ArrayOfGuid  alertIds ,)javax.xml.datatype.XMLGregorianCalendar  centerTime ,)com.mile.ServerCommandService.TimeDuration  maxTimeBefore ,)int  maxCountBefore ,)com.mile.ServerCommandService.TimeDuration  maxTimeAfter ,)int  maxCountAfter )*
     */
    public com.mile.ServerCommandService.ArrayOfAlertOccurrence alertsGetAroundWithSpan(java.lang.String token,com.mile.ServerCommandService.ArrayOfGuid alertIds,javax.xml.datatype.XMLGregorianCalendar centerTime,com.mile.ServerCommandService.TimeDuration maxTimeBefore,int maxCountBefore,com.mile.ServerCommandService.TimeDuration maxTimeAfter,int maxCountAfter) { 
        LOG.info("Executing operation alertsGetAroundWithSpan");
        System.out.println(token);
        System.out.println(alertIds);
        System.out.println(centerTime);
        System.out.println(maxTimeBefore);
        System.out.println(maxCountBefore);
        System.out.println(maxTimeAfter);
        System.out.println(maxCountAfter);
        try {
            com.mile.ServerCommandService.ArrayOfAlertOccurrence _return = new com.mile.ServerCommandService.ArrayOfAlertOccurrence();
            java.util.List<com.mile.ServerCommandService.AlertOccurrence> _returnAlertOccurrence = new java.util.ArrayList<com.mile.ServerCommandService.AlertOccurrence>();
            com.mile.ServerCommandService.AlertOccurrence _returnAlertOccurrenceVal1 = new com.mile.ServerCommandService.AlertOccurrence();
            _returnAlertOccurrenceVal1.setAlertId("AlertId-1266032044");
            _returnAlertOccurrenceVal1.setTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.692-04:00"));
            _returnAlertOccurrence.add(_returnAlertOccurrenceVal1);
            _return.getAlertOccurrence().addAll(_returnAlertOccurrence);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#queryChanges(java.lang.String  token ,)javax.xml.datatype.XMLGregorianCalendar  changesFrom )*
     */
    public com.mile.ServerCommandService.ArrayOfChange queryChanges(java.lang.String token,javax.xml.datatype.XMLGregorianCalendar changesFrom) { 
        LOG.info("Executing operation queryChanges");
        System.out.println(token);
        System.out.println(changesFrom);
        try {
            com.mile.ServerCommandService.ArrayOfChange _return = new com.mile.ServerCommandService.ArrayOfChange();
            java.util.List<com.mile.ServerCommandService.Change> _returnChange = new java.util.ArrayList<com.mile.ServerCommandService.Change>();
            com.mile.ServerCommandService.Change _returnChangeVal1 = new com.mile.ServerCommandService.Change();
            com.mile.ServerCommandService.ChangeType _returnChangeVal1ChangeType = new com.mile.ServerCommandService.ChangeType();
            _returnChangeVal1ChangeType.setRecorder(true);
            _returnChangeVal1ChangeType.setHardware(true);
            _returnChangeVal1.setChangeType(_returnChangeVal1ChangeType);
            _returnChangeVal1.setId("Id1719307874");
            _returnChangeVal1.setTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.693-04:00"));
            _returnChange.add(_returnChangeVal1);
            _return.getChange().addAll(_returnChange);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#querySystemMonitorStateSourcesByIds(com.mile.ServerCommandService.ArrayOfString  ids )*
     */
    public com.mile.ServerCommandService.ArrayOfSystemMonitorStateSource querySystemMonitorStateSourcesByIds(com.mile.ServerCommandService.ArrayOfString ids) { 
        LOG.info("Executing operation querySystemMonitorStateSourcesByIds");
        System.out.println(ids);
        try {
            com.mile.ServerCommandService.ArrayOfSystemMonitorStateSource _return = new com.mile.ServerCommandService.ArrayOfSystemMonitorStateSource();
            java.util.List<com.mile.ServerCommandService.SystemMonitorStateSource> _returnSystemMonitorStateSource = new java.util.ArrayList<com.mile.ServerCommandService.SystemMonitorStateSource>();
            com.mile.ServerCommandService.SystemMonitorStateSource _returnSystemMonitorStateSourceVal1 = new com.mile.ServerCommandService.SystemMonitorStateSource();
            _returnSystemMonitorStateSourceVal1.setId("Id-659509279");
            _returnSystemMonitorStateSourceVal1.setName("Name1296197860");
            _returnSystemMonitorStateSource.add(_returnSystemMonitorStateSourceVal1);
            _return.getSystemMonitorStateSource().addAll(_returnSystemMonitorStateSource);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#eventTrigger(java.lang.String  token ,)java.lang.String  eventId )*
     */
    public void eventTrigger(java.lang.String token,java.lang.String eventId) { 
        LOG.info("Executing operation eventTrigger");
        System.out.println(token);
        System.out.println(eventId);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#bookmarkSearchFromBookmark(java.lang.String  token ,)java.lang.String  fromBookmarkId ,)com.mile.ServerCommandService.TimeDuration  timeLimit ,)int  countLimit ,)com.mile.ServerCommandService.ArrayOfMediaDeviceType  deviceTypes ,)com.mile.ServerCommandService.ArrayOfGuid  optDeviceIds ,)com.mile.ServerCommandService.ArrayOfString  optUsers ,)java.lang.String  optSearchStr )*
     */
    public com.mile.ServerCommandService.ArrayOfBookmark bookmarkSearchFromBookmark(java.lang.String token,java.lang.String fromBookmarkId,com.mile.ServerCommandService.TimeDuration timeLimit,int countLimit,com.mile.ServerCommandService.ArrayOfMediaDeviceType deviceTypes,com.mile.ServerCommandService.ArrayOfGuid optDeviceIds,com.mile.ServerCommandService.ArrayOfString optUsers,java.lang.String optSearchStr) { 
        LOG.info("Executing operation bookmarkSearchFromBookmark");
        System.out.println(token);
        System.out.println(fromBookmarkId);
        System.out.println(timeLimit);
        System.out.println(countLimit);
        System.out.println(deviceTypes);
        System.out.println(optDeviceIds);
        System.out.println(optUsers);
        System.out.println(optSearchStr);
        try {
            com.mile.ServerCommandService.ArrayOfBookmark _return = new com.mile.ServerCommandService.ArrayOfBookmark();
            java.util.List<com.mile.ServerCommandService.Bookmark> _returnBookmark = new java.util.ArrayList<com.mile.ServerCommandService.Bookmark>();
            com.mile.ServerCommandService.Bookmark _returnBookmarkVal1 = new com.mile.ServerCommandService.Bookmark();
            _returnBookmarkVal1.setId("Id-782080415");
            _returnBookmarkVal1.setDeviceId("DeviceId-1365692912");
            _returnBookmarkVal1.setReference("Reference1596727839");
            _returnBookmarkVal1.setHeader("Header-1420345335");
            _returnBookmarkVal1.setDescription("Description1692824684");
            _returnBookmarkVal1.setUser("User1209294892");
            _returnBookmarkVal1.setTimeBegin(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.694-04:00"));
            _returnBookmarkVal1.setTimeTrigged(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.695-04:00"));
            _returnBookmarkVal1.setTimeEnd(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.695-04:00"));
            _returnBookmark.add(_returnBookmarkVal1);
            _return.getBookmark().addAll(_returnBookmark);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#markedDataDelete(java.lang.String  token ,)com.mile.ServerCommandService.ArrayOfGuid  markedDataIds )*
     */
    public com.mile.ServerCommandService.ArrayOfMarkedDataResult markedDataDelete(java.lang.String token,com.mile.ServerCommandService.ArrayOfGuid markedDataIds) { 
        LOG.info("Executing operation markedDataDelete");
        System.out.println(token);
        System.out.println(markedDataIds);
        try {
            com.mile.ServerCommandService.ArrayOfMarkedDataResult _return = new com.mile.ServerCommandService.ArrayOfMarkedDataResult();
            java.util.List<com.mile.ServerCommandService.MarkedDataResult> _returnMarkedDataResult = new java.util.ArrayList<com.mile.ServerCommandService.MarkedDataResult>();
            com.mile.ServerCommandService.MarkedDataResult _returnMarkedDataResultVal1 = new com.mile.ServerCommandService.MarkedDataResult();
            com.mile.ServerCommandService.MarkedData _returnMarkedDataResultVal1MarkedData = new com.mile.ServerCommandService.MarkedData();
            _returnMarkedDataResultVal1MarkedData.setId("Id-752837752");
            com.mile.ServerCommandService.ArrayOfGuid _returnMarkedDataResultVal1MarkedDataDeviceIds = new com.mile.ServerCommandService.ArrayOfGuid();
            java.util.List<java.lang.String> _returnMarkedDataResultVal1MarkedDataDeviceIdsGuid = new java.util.ArrayList<java.lang.String>();
            _returnMarkedDataResultVal1MarkedDataDeviceIds.getGuid().addAll(_returnMarkedDataResultVal1MarkedDataDeviceIdsGuid);
            _returnMarkedDataResultVal1MarkedData.setDeviceIds(_returnMarkedDataResultVal1MarkedDataDeviceIds);
            _returnMarkedDataResultVal1MarkedData.setCreated(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.697-04:00"));
            _returnMarkedDataResultVal1MarkedData.setLastModified(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.699-04:00"));
            _returnMarkedDataResultVal1MarkedData.setReference("Reference1130508070");
            _returnMarkedDataResultVal1MarkedData.setHeader("Header1934984798");
            _returnMarkedDataResultVal1MarkedData.setDescription("Description523733214");
            _returnMarkedDataResultVal1MarkedData.setUser("User-1026830348");
            _returnMarkedDataResultVal1MarkedData.setStartTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.700-04:00"));
            _returnMarkedDataResultVal1MarkedData.setTagTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.700-04:00"));
            _returnMarkedDataResultVal1MarkedData.setEndTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.701-04:00"));
            _returnMarkedDataResultVal1MarkedData.setUseRetention(false);
            _returnMarkedDataResultVal1MarkedData.setRetentionExpire(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.701-04:00"));
            _returnMarkedDataResultVal1MarkedData.setRetentionSize(4513236243383069215l);
            com.mile.ServerCommandService.RetentionOption _returnMarkedDataResultVal1MarkedDataRetentionOption = new com.mile.ServerCommandService.RetentionOption();
            _returnMarkedDataResultVal1MarkedDataRetentionOption.setRetentionUnits(93149175);
            com.mile.ServerCommandService.RetentionOptionType _returnMarkedDataResultVal1MarkedDataRetentionOptionRetentionOptionType = com.mile.ServerCommandService.RetentionOptionType.DAYS;
            _returnMarkedDataResultVal1MarkedDataRetentionOption.setRetentionOptionType(_returnMarkedDataResultVal1MarkedDataRetentionOptionRetentionOptionType);
            _returnMarkedDataResultVal1MarkedData.setRetentionOption(_returnMarkedDataResultVal1MarkedDataRetentionOption);
            _returnMarkedDataResultVal1.setMarkedData(_returnMarkedDataResultVal1MarkedData);
            com.mile.ServerCommandService.ArrayOfFaultDevice _returnMarkedDataResultVal1FaultDevices = new com.mile.ServerCommandService.ArrayOfFaultDevice();
            java.util.List<com.mile.ServerCommandService.FaultDevice> _returnMarkedDataResultVal1FaultDevicesFaultDevice = new java.util.ArrayList<com.mile.ServerCommandService.FaultDevice>();
            _returnMarkedDataResultVal1FaultDevices.getFaultDevice().addAll(_returnMarkedDataResultVal1FaultDevicesFaultDevice);
            _returnMarkedDataResultVal1.setFaultDevices(_returnMarkedDataResultVal1FaultDevices);
            com.mile.ServerCommandService.ResultStatus _returnMarkedDataResultVal1Status = com.mile.ServerCommandService.ResultStatus.PARTLY_SUCCESS;
            _returnMarkedDataResultVal1.setStatus(_returnMarkedDataResultVal1Status);
            _returnMarkedDataResult.add(_returnMarkedDataResultVal1);
            _return.getMarkedDataResult().addAll(_returnMarkedDataResult);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#markedDataGet(java.lang.String  token ,)java.lang.String  markedDataId )*
     */
    public com.mile.ServerCommandService.MarkedData markedDataGet(java.lang.String token,java.lang.String markedDataId) { 
        LOG.info("Executing operation markedDataGet");
        System.out.println(token);
        System.out.println(markedDataId);
        try {
            com.mile.ServerCommandService.MarkedData _return = new com.mile.ServerCommandService.MarkedData();
            _return.setId("Id-868046488");
            com.mile.ServerCommandService.ArrayOfGuid _returnDeviceIds = new com.mile.ServerCommandService.ArrayOfGuid();
            java.util.List<java.lang.String> _returnDeviceIdsGuid = new java.util.ArrayList<java.lang.String>();
            java.lang.String _returnDeviceIdsGuidVal1 = "_returnDeviceIdsGuidVal1650103943";
            _returnDeviceIdsGuid.add(_returnDeviceIdsGuidVal1);
            _returnDeviceIds.getGuid().addAll(_returnDeviceIdsGuid);
            _return.setDeviceIds(_returnDeviceIds);
            _return.setCreated(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.703-04:00"));
            _return.setLastModified(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.704-04:00"));
            _return.setReference("Reference-1341994793");
            _return.setHeader("Header-1534594834");
            _return.setDescription("Description-584237908");
            _return.setUser("User1406719202");
            _return.setStartTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.712-04:00"));
            _return.setTagTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.713-04:00"));
            _return.setEndTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.713-04:00"));
            _return.setUseRetention(false);
            _return.setRetentionExpire(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.714-04:00"));
            _return.setRetentionSize(89671509004006025l);
            com.mile.ServerCommandService.RetentionOption _returnRetentionOption = new com.mile.ServerCommandService.RetentionOption();
            _returnRetentionOption.setRetentionUnits(-2052933458);
            com.mile.ServerCommandService.RetentionOptionType _returnRetentionOptionRetentionOptionType = com.mile.ServerCommandService.RetentionOptionType.USER_DEFINED;
            _returnRetentionOption.setRetentionOptionType(_returnRetentionOptionRetentionOptionType);
            _return.setRetentionOption(_returnRetentionOption);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#login(java.lang.String  instanceId ,)java.lang.String  currentToken )*
     */
    public com.mile.ServerCommandService.LoginInfo login(java.lang.String instanceId,java.lang.String currentToken) { 
        LOG.info("Executing operation login");
        System.out.println(instanceId);
        System.out.println(currentToken);
        try {
            com.mile.ServerCommandService.LoginInfo _return = new com.mile.ServerCommandService.LoginInfo();
            _return.setToken("Token-1913300757");
            _return.setRegistrationTime(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.715-04:00"));
            com.mile.ServerCommandService.TimeDuration _returnTimeToLive = new com.mile.ServerCommandService.TimeDuration();
            _returnTimeToLive.setMicroSeconds(-6342746435176597407l);
            _return.setTimeToLive(_returnTimeToLive);
            _return.setTimeToLiveLimited(false);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#getSmartClientVersion(*
     */
    public com.mile.ServerCommandService.SmartClientVersion getSmartClientVersion() { 
        LOG.info("Executing operation getSmartClientVersion");
        try {
            com.mile.ServerCommandService.SmartClientVersion _return = new com.mile.ServerCommandService.SmartClientVersion();
            _return.setMajor(2005707890);
            _return.setMinor(-265745458);
            _return.setRevision("Revision-1274252830");
            _return.setBeta(1061887155);
            _return.setForceUpgrade(true);
            _return.setDisplayName("DisplayName-380936418");
            com.mile.ServerCommandService.UpgradeInfo _returnUpgradeInfo = new com.mile.ServerCommandService.UpgradeInfo();
            _returnUpgradeInfo.setHostname("Hostname-123467920");
            _returnUpgradeInfo.setPort(-457543029);
            _returnUpgradeInfo.setPath("Path263808552");
            _returnUpgradeInfo.setMessage("Message863093755");
            _return.setUpgradeInfo(_returnUpgradeInfo);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#updatePresetName(java.lang.String  token ,)java.lang.String  id ,)java.lang.String  deviceId ,)java.lang.String  newName )*
     */
    public void updatePresetName(java.lang.String token,java.lang.String id,java.lang.String deviceId,java.lang.String newName) { 
        LOG.info("Executing operation updatePresetName");
        System.out.println(token);
        System.out.println(id);
        System.out.println(deviceId);
        System.out.println(newName);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#eventTriggerWithMetadata(java.lang.String  token ,)java.lang.String  eventId ,)com.mile.ServerCommandService.ArrayOfKeyValue  metadata )*
     */
    public void eventTriggerWithMetadata(java.lang.String token,java.lang.String eventId,com.mile.ServerCommandService.ArrayOfKeyValue metadata) { 
        LOG.info("Executing operation eventTriggerWithMetadata");
        System.out.println(token);
        System.out.println(eventId);
        System.out.println(metadata);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#querySystemMonitorStateSourcesByTypes(com.mile.ServerCommandService.ArrayOfString  types )*
     */
    public com.mile.ServerCommandService.ArrayOfSystemMonitorStateSource querySystemMonitorStateSourcesByTypes(com.mile.ServerCommandService.ArrayOfString types) { 
        LOG.info("Executing operation querySystemMonitorStateSourcesByTypes");
        System.out.println(types);
        try {
            com.mile.ServerCommandService.ArrayOfSystemMonitorStateSource _return = new com.mile.ServerCommandService.ArrayOfSystemMonitorStateSource();
            java.util.List<com.mile.ServerCommandService.SystemMonitorStateSource> _returnSystemMonitorStateSource = new java.util.ArrayList<com.mile.ServerCommandService.SystemMonitorStateSource>();
            com.mile.ServerCommandService.SystemMonitorStateSource _returnSystemMonitorStateSourceVal1 = new com.mile.ServerCommandService.SystemMonitorStateSource();
            _returnSystemMonitorStateSourceVal1.setId("Id-1853954365");
            _returnSystemMonitorStateSourceVal1.setName("Name57260104");
            _returnSystemMonitorStateSource.add(_returnSystemMonitorStateSourceVal1);
            _return.getSystemMonitorStateSource().addAll(_returnSystemMonitorStateSource);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#setViewGroupData(java.lang.String  token ,)java.lang.String  viewGroupId ,)com.mile.ServerCommandService.ViewGroupData  viewGroupdata )*
     */
    public com.mile.ServerCommandService.SetViewGroupDataResultType setViewGroupData(java.lang.String token,java.lang.String viewGroupId,com.mile.ServerCommandService.ViewGroupData viewGroupdata) { 
        LOG.info("Executing operation setViewGroupData");
        System.out.println(token);
        System.out.println(viewGroupId);
        System.out.println(viewGroupdata);
        try {
            com.mile.ServerCommandService.SetViewGroupDataResultType _return = com.mile.ServerCommandService.SetViewGroupDataResultType.SUCCESS;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#getDevicesDisabled(java.lang.String  token )*
     */
    public com.mile.ServerCommandService.ArrayOfDeviceDisabledInfo getDevicesDisabled(java.lang.String token) { 
        LOG.info("Executing operation getDevicesDisabled");
        System.out.println(token);
        try {
            com.mile.ServerCommandService.ArrayOfDeviceDisabledInfo _return = new com.mile.ServerCommandService.ArrayOfDeviceDisabledInfo();
            java.util.List<com.mile.ServerCommandService.DeviceDisabledInfo> _returnDeviceDisabledInfo = new java.util.ArrayList<com.mile.ServerCommandService.DeviceDisabledInfo>();
            com.mile.ServerCommandService.DeviceDisabledInfo _returnDeviceDisabledInfoVal1 = new com.mile.ServerCommandService.DeviceDisabledInfo();
            _returnDeviceDisabledInfoVal1.setRecorderId("RecorderId-1486589657");
            _returnDeviceDisabledInfoVal1.setHardwareId("HardwareId771563120");
            _returnDeviceDisabledInfoVal1.setDeviceId("DeviceId1706455499");
            _returnDeviceDisabledInfoVal1.setDeviceType("DeviceType1215407507");
            _returnDeviceDisabledInfoVal1.setDeviceName("DeviceName-924007546");
            _returnDeviceDisabledInfo.add(_returnDeviceDisabledInfoVal1);
            _return.getDeviceDisabledInfo().addAll(_returnDeviceDisabledInfo);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#bookmarkDelete(java.lang.String  token ,)java.lang.String  bookmarkId )*
     */
    public void bookmarkDelete(java.lang.String token,java.lang.String bookmarkId) { 
        LOG.info("Executing operation bookmarkDelete");
        System.out.println(token);
        System.out.println(bookmarkId);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#orderPresets(java.lang.String  token ,)java.lang.String  deviceId ,)com.mile.ServerCommandService.ArrayOfGuid  ids )*
     */
    public void orderPresets(java.lang.String token,java.lang.String deviceId,com.mile.ServerCommandService.ArrayOfGuid ids) { 
        LOG.info("Executing operation orderPresets");
        System.out.println(token);
        System.out.println(deviceId);
        System.out.println(ids);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#bookmarkGet(java.lang.String  token ,)java.lang.String  bookmarkId )*
     */
    public com.mile.ServerCommandService.Bookmark bookmarkGet(java.lang.String token,java.lang.String bookmarkId) { 
        LOG.info("Executing operation bookmarkGet");
        System.out.println(token);
        System.out.println(bookmarkId);
        try {
            com.mile.ServerCommandService.Bookmark _return = new com.mile.ServerCommandService.Bookmark();
            _return.setId("Id1329505681");
            _return.setDeviceId("DeviceId455878631");
            _return.setReference("Reference1287145651");
            _return.setHeader("Header-1797409515");
            _return.setDescription("Description-577947228");
            _return.setUser("User2049096318");
            _return.setTimeBegin(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.717-04:00"));
            _return.setTimeTrigged(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.717-04:00"));
            _return.setTimeEnd(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.718-04:00"));
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#getUserInfo(java.lang.String  token )*
     */
    public com.mile.ServerCommandService.UserInfo getUserInfo(java.lang.String token) { 
        LOG.info("Executing operation getUserInfo");
        System.out.println(token);
        try {
            com.mile.ServerCommandService.UserInfo _return = new com.mile.ServerCommandService.UserInfo();
            _return.setName("Name1810631653");
            _return.setSid("Sid834162458");
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#getConfiguration(java.lang.String  token )*
     */
    public com.mile.ServerCommandService.ConfigurationInfo getConfiguration(java.lang.String token) { 
        LOG.info("Executing operation getConfiguration");
        System.out.println(token);
        try {
            com.mile.ServerCommandService.ConfigurationInfo _return = new com.mile.ServerCommandService.ConfigurationInfo();
            _return.setServerId("ServerId2095822515");
            _return.setServerName("ServerName1663516619");
            _return.setServerDescription("ServerDescription2022640207");
            com.mile.ServerCommandService.ArrayOfServerOption _returnServerOptions = new com.mile.ServerCommandService.ArrayOfServerOption();
            java.util.List<com.mile.ServerCommandService.ServerOption> _returnServerOptionsServerOption = new java.util.ArrayList<com.mile.ServerCommandService.ServerOption>();
            com.mile.ServerCommandService.ServerOption _returnServerOptionsServerOptionVal1 = new com.mile.ServerCommandService.ServerOption();
            _returnServerOptionsServerOptionVal1.setKey("Key2112392093");
            _returnServerOptionsServerOptionVal1.setValue("Value1048595893");
            _returnServerOptionsServerOption.add(_returnServerOptionsServerOptionVal1);
            _returnServerOptions.getServerOption().addAll(_returnServerOptionsServerOption);
            _return.setServerOptions(_returnServerOptions);
            com.mile.ServerCommandService.ArrayOfRecorderInfo _returnRecorders = new com.mile.ServerCommandService.ArrayOfRecorderInfo();
            java.util.List<com.mile.ServerCommandService.RecorderInfo> _returnRecordersRecorderInfo = new java.util.ArrayList<com.mile.ServerCommandService.RecorderInfo>();
            com.mile.ServerCommandService.RecorderInfo _returnRecordersRecorderInfoVal1 = new com.mile.ServerCommandService.RecorderInfo();
            _returnRecordersRecorderInfoVal1.setRecorderId("RecorderId339936507");
            _returnRecordersRecorderInfoVal1.setServiceId("ServiceId-934640815");
            _returnRecordersRecorderInfoVal1.setName("Name-982885866");
            _returnRecordersRecorderInfoVal1.setDescription("Description-1476313804");
            _returnRecordersRecorderInfoVal1.setHostName("HostName1868137475");
            _returnRecordersRecorderInfoVal1.setWebServerUri("WebServerUri205323721");
            _returnRecordersRecorderInfoVal1.setTimeZoneName("TimeZoneName-1989297305");
            _returnRecordersRecorderInfoVal1.setDefaultRecordingTimeSeconds(-2103316433);
            _returnRecordersRecorderInfoVal1.setXmlEncoding("XmlEncoding1359962797");
            _returnRecordersRecorderInfoVal1.setLastModified(javax.xml.datatype.DatatypeFactory.newInstance().newXMLGregorianCalendar("2018-09-13T12:46:27.719-04:00"));
            com.mile.ServerCommandService.ArrayOfCameraInfo _returnRecordersRecorderInfoVal1Cameras = new com.mile.ServerCommandService.ArrayOfCameraInfo();
            java.util.List<com.mile.ServerCommandService.CameraInfo> _returnRecordersRecorderInfoVal1CamerasCameraInfo = new java.util.ArrayList<com.mile.ServerCommandService.CameraInfo>();
            _returnRecordersRecorderInfoVal1Cameras.getCameraInfo().addAll(_returnRecordersRecorderInfoVal1CamerasCameraInfo);
            _returnRecordersRecorderInfoVal1.setCameras(_returnRecordersRecorderInfoVal1Cameras);
            com.mile.ServerCommandService.ArrayOfInputInfo _returnRecordersRecorderInfoVal1Inputs = new com.mile.ServerCommandService.ArrayOfInputInfo();
            java.util.List<com.mile.ServerCommandService.InputInfo> _returnRecordersRecorderInfoVal1InputsInputInfo = new java.util.ArrayList<com.mile.ServerCommandService.InputInfo>();
            _returnRecordersRecorderInfoVal1Inputs.getInputInfo().addAll(_returnRecordersRecorderInfoVal1InputsInputInfo);
            _returnRecordersRecorderInfoVal1.setInputs(_returnRecordersRecorderInfoVal1Inputs);
            com.mile.ServerCommandService.ArrayOfOutputInfo _returnRecordersRecorderInfoVal1Outputs = new com.mile.ServerCommandService.ArrayOfOutputInfo();
            java.util.List<com.mile.ServerCommandService.OutputInfo> _returnRecordersRecorderInfoVal1OutputsOutputInfo = new java.util.ArrayList<com.mile.ServerCommandService.OutputInfo>();
            _returnRecordersRecorderInfoVal1Outputs.getOutputInfo().addAll(_returnRecordersRecorderInfoVal1OutputsOutputInfo);
            _returnRecordersRecorderInfoVal1.setOutputs(_returnRecordersRecorderInfoVal1Outputs);
            com.mile.ServerCommandService.ArrayOfMicrophoneInfo _returnRecordersRecorderInfoVal1Microphones = new com.mile.ServerCommandService.ArrayOfMicrophoneInfo();
            java.util.List<com.mile.ServerCommandService.MicrophoneInfo> _returnRecordersRecorderInfoVal1MicrophonesMicrophoneInfo = new java.util.ArrayList<com.mile.ServerCommandService.MicrophoneInfo>();
            _returnRecordersRecorderInfoVal1Microphones.getMicrophoneInfo().addAll(_returnRecordersRecorderInfoVal1MicrophonesMicrophoneInfo);
            _returnRecordersRecorderInfoVal1.setMicrophones(_returnRecordersRecorderInfoVal1Microphones);
            com.mile.ServerCommandService.ArrayOfSpeakerInfo _returnRecordersRecorderInfoVal1Speakers = new com.mile.ServerCommandService.ArrayOfSpeakerInfo();
            java.util.List<com.mile.ServerCommandService.SpeakerInfo> _returnRecordersRecorderInfoVal1SpeakersSpeakerInfo = new java.util.ArrayList<com.mile.ServerCommandService.SpeakerInfo>();
            _returnRecordersRecorderInfoVal1Speakers.getSpeakerInfo().addAll(_returnRecordersRecorderInfoVal1SpeakersSpeakerInfo);
            _returnRecordersRecorderInfoVal1.setSpeakers(_returnRecordersRecorderInfoVal1Speakers);
            com.mile.ServerCommandService.ArrayOfMetadataDeviceInfo _returnRecordersRecorderInfoVal1MetadataDevices = new com.mile.ServerCommandService.ArrayOfMetadataDeviceInfo();
            java.util.List<com.mile.ServerCommandService.MetadataDeviceInfo> _returnRecordersRecorderInfoVal1MetadataDevicesMetadataDeviceInfo = new java.util.ArrayList<com.mile.ServerCommandService.MetadataDeviceInfo>();
            _returnRecordersRecorderInfoVal1MetadataDevices.getMetadataDeviceInfo().addAll(_returnRecordersRecorderInfoVal1MetadataDevicesMetadataDeviceInfo);
            _returnRecordersRecorderInfoVal1.setMetadataDevices(_returnRecordersRecorderInfoVal1MetadataDevices);
            com.mile.ServerCommandService.ArrayOfHardwareInfo _returnRecordersRecorderInfoVal1Hardware = new com.mile.ServerCommandService.ArrayOfHardwareInfo();
            java.util.List<com.mile.ServerCommandService.HardwareInfo> _returnRecordersRecorderInfoVal1HardwareHardwareInfo = new java.util.ArrayList<com.mile.ServerCommandService.HardwareInfo>();
            _returnRecordersRecorderInfoVal1Hardware.getHardwareInfo().addAll(_returnRecordersRecorderInfoVal1HardwareHardwareInfo);
            _returnRecordersRecorderInfoVal1.setHardware(_returnRecordersRecorderInfoVal1Hardware);
            _returnRecordersRecorderInfo.add(_returnRecordersRecorderInfoVal1);
            _returnRecorders.getRecorderInfo().addAll(_returnRecordersRecorderInfo);
            _return.setRecorders(_returnRecorders);
            com.mile.ServerCommandService.ApplicationSecurityInfo _returnApplicationAccess = new com.mile.ServerCommandService.ApplicationSecurityInfo();
            com.mile.ServerCommandService.SmartClientSecurityInfo _returnApplicationAccessSmartClientSecurity = new com.mile.ServerCommandService.SmartClientSecurityInfo();
            _returnApplicationAccessSmartClientSecurity.setSmartClientLive(false);
            _returnApplicationAccessSmartClientSecurity.setSmartClientBrowse(true);
            _returnApplicationAccessSmartClientSecurity.setSmartClientSetup(true);
            _returnApplicationAccessSmartClientSecurity.setSmartClientReport(false);
            _returnApplicationAccess.setSmartClientSecurity(_returnApplicationAccessSmartClientSecurity);
            _return.setApplicationAccess(_returnApplicationAccess);
            _return.setFailoverCheckInterval(-450223794);
            com.mile.ServerCommandService.ArrayOfLicenseInfo _returnLicenses = new com.mile.ServerCommandService.ArrayOfLicenseInfo();
            java.util.List<com.mile.ServerCommandService.LicenseInfo> _returnLicensesLicenseInfo = new java.util.ArrayList<com.mile.ServerCommandService.LicenseInfo>();
            com.mile.ServerCommandService.LicenseInfo _returnLicensesLicenseInfoVal1 = new com.mile.ServerCommandService.LicenseInfo();
            _returnLicensesLicenseInfoVal1.setLicenseId("LicenseId-1064256624");
            _returnLicensesLicenseInfoVal1.setData("Data741543938");
            _returnLicensesLicenseInfo.add(_returnLicensesLicenseInfoVal1);
            _returnLicenses.getLicenseInfo().addAll(_returnLicensesLicenseInfo);
            _return.setLicenses(_returnLicenses);
            com.mile.ServerCommandService.ArrayOfDeviceMappingInfo _returnDeviceMappings = new com.mile.ServerCommandService.ArrayOfDeviceMappingInfo();
            java.util.List<com.mile.ServerCommandService.DeviceMappingInfo> _returnDeviceMappingsDeviceMappingInfo = new java.util.ArrayList<com.mile.ServerCommandService.DeviceMappingInfo>();
            com.mile.ServerCommandService.DeviceMappingInfo _returnDeviceMappingsDeviceMappingInfoVal1 = new com.mile.ServerCommandService.DeviceMappingInfo();
            _returnDeviceMappingsDeviceMappingInfoVal1.setDeviceA("DeviceA502713487");
            _returnDeviceMappingsDeviceMappingInfoVal1.setDeviceB("DeviceB-2073921947");
            _returnDeviceMappingsDeviceMappingInfo.add(_returnDeviceMappingsDeviceMappingInfoVal1);
            _returnDeviceMappings.getDeviceMappingInfo().addAll(_returnDeviceMappingsDeviceMappingInfo);
            _return.setDeviceMappings(_returnDeviceMappings);
            com.mile.ServerCommandService.ArrayOfCameraGroupInfo _returnCameraGroups = new com.mile.ServerCommandService.ArrayOfCameraGroupInfo();
            java.util.List<com.mile.ServerCommandService.CameraGroupInfo> _returnCameraGroupsCameraGroupInfo = new java.util.ArrayList<com.mile.ServerCommandService.CameraGroupInfo>();
            com.mile.ServerCommandService.CameraGroupInfo _returnCameraGroupsCameraGroupInfoVal1 = new com.mile.ServerCommandService.CameraGroupInfo();
            _returnCameraGroupsCameraGroupInfoVal1.setGroupId("GroupId-185088958");
            _returnCameraGroupsCameraGroupInfoVal1.setName("Name-76386644");
            _returnCameraGroupsCameraGroupInfoVal1.setDescription("Description797198290");
            com.mile.ServerCommandService.ArrayOfCameraGroupInfo _returnCameraGroupsCameraGroupInfoVal1CameraGroups = new com.mile.ServerCommandService.ArrayOfCameraGroupInfo();
            java.util.List<com.mile.ServerCommandService.CameraGroupInfo> _returnCameraGroupsCameraGroupInfoVal1CameraGroupsCameraGroupInfo = new java.util.ArrayList<com.mile.ServerCommandService.CameraGroupInfo>();
            _returnCameraGroupsCameraGroupInfoVal1CameraGroups.getCameraGroupInfo().addAll(_returnCameraGroupsCameraGroupInfoVal1CameraGroupsCameraGroupInfo);
            _returnCameraGroupsCameraGroupInfoVal1.setCameraGroups(_returnCameraGroupsCameraGroupInfoVal1CameraGroups);
            com.mile.ServerCommandService.ArrayOfGuid _returnCameraGroupsCameraGroupInfoVal1Cameras = new com.mile.ServerCommandService.ArrayOfGuid();
            java.util.List<java.lang.String> _returnCameraGroupsCameraGroupInfoVal1CamerasGuid = new java.util.ArrayList<java.lang.String>();
            _returnCameraGroupsCameraGroupInfoVal1Cameras.getGuid().addAll(_returnCameraGroupsCameraGroupInfoVal1CamerasGuid);
            _returnCameraGroupsCameraGroupInfoVal1.setCameras(_returnCameraGroupsCameraGroupInfoVal1Cameras);
            _returnCameraGroupsCameraGroupInfo.add(_returnCameraGroupsCameraGroupInfoVal1);
            _returnCameraGroups.getCameraGroupInfo().addAll(_returnCameraGroupsCameraGroupInfo);
            _return.setCameraGroups(_returnCameraGroups);
            com.mile.ServerCommandService.ArrayOfInputGroupInfo _returnInputGroups = new com.mile.ServerCommandService.ArrayOfInputGroupInfo();
            java.util.List<com.mile.ServerCommandService.InputGroupInfo> _returnInputGroupsInputGroupInfo = new java.util.ArrayList<com.mile.ServerCommandService.InputGroupInfo>();
            com.mile.ServerCommandService.InputGroupInfo _returnInputGroupsInputGroupInfoVal1 = new com.mile.ServerCommandService.InputGroupInfo();
            _returnInputGroupsInputGroupInfoVal1.setGroupId("GroupId-1447648947");
            _returnInputGroupsInputGroupInfoVal1.setName("Name1449250344");
            _returnInputGroupsInputGroupInfoVal1.setDescription("Description109985281");
            com.mile.ServerCommandService.ArrayOfInputGroupInfo _returnInputGroupsInputGroupInfoVal1InputGroups = new com.mile.ServerCommandService.ArrayOfInputGroupInfo();
            java.util.List<com.mile.ServerCommandService.InputGroupInfo> _returnInputGroupsInputGroupInfoVal1InputGroupsInputGroupInfo = new java.util.ArrayList<com.mile.ServerCommandService.InputGroupInfo>();
            _returnInputGroupsInputGroupInfoVal1InputGroups.getInputGroupInfo().addAll(_returnInputGroupsInputGroupInfoVal1InputGroupsInputGroupInfo);
            _returnInputGroupsInputGroupInfoVal1.setInputGroups(_returnInputGroupsInputGroupInfoVal1InputGroups);
            com.mile.ServerCommandService.ArrayOfGuid _returnInputGroupsInputGroupInfoVal1Inputs = new com.mile.ServerCommandService.ArrayOfGuid();
            java.util.List<java.lang.String> _returnInputGroupsInputGroupInfoVal1InputsGuid = new java.util.ArrayList<java.lang.String>();
            _returnInputGroupsInputGroupInfoVal1Inputs.getGuid().addAll(_returnInputGroupsInputGroupInfoVal1InputsGuid);
            _returnInputGroupsInputGroupInfoVal1.setInputs(_returnInputGroupsInputGroupInfoVal1Inputs);
            _returnInputGroupsInputGroupInfo.add(_returnInputGroupsInputGroupInfoVal1);
            _returnInputGroups.getInputGroupInfo().addAll(_returnInputGroupsInputGroupInfo);
            _return.setInputGroups(_returnInputGroups);
            com.mile.ServerCommandService.ArrayOfOutputGroupInfo _returnOutputGroups = new com.mile.ServerCommandService.ArrayOfOutputGroupInfo();
            java.util.List<com.mile.ServerCommandService.OutputGroupInfo> _returnOutputGroupsOutputGroupInfo = new java.util.ArrayList<com.mile.ServerCommandService.OutputGroupInfo>();
            com.mile.ServerCommandService.OutputGroupInfo _returnOutputGroupsOutputGroupInfoVal1 = new com.mile.ServerCommandService.OutputGroupInfo();
            _returnOutputGroupsOutputGroupInfoVal1.setGroupId("GroupId-2047540812");
            _returnOutputGroupsOutputGroupInfoVal1.setName("Name-1300691957");
            _returnOutputGroupsOutputGroupInfoVal1.setDescription("Description1585527348");
            com.mile.ServerCommandService.ArrayOfOutputGroupInfo _returnOutputGroupsOutputGroupInfoVal1OutputGroups = new com.mile.ServerCommandService.ArrayOfOutputGroupInfo();
            java.util.List<com.mile.ServerCommandService.OutputGroupInfo> _returnOutputGroupsOutputGroupInfoVal1OutputGroupsOutputGroupInfo = new java.util.ArrayList<com.mile.ServerCommandService.OutputGroupInfo>();
            _returnOutputGroupsOutputGroupInfoVal1OutputGroups.getOutputGroupInfo().addAll(_returnOutputGroupsOutputGroupInfoVal1OutputGroupsOutputGroupInfo);
            _returnOutputGroupsOutputGroupInfoVal1.setOutputGroups(_returnOutputGroupsOutputGroupInfoVal1OutputGroups);
            com.mile.ServerCommandService.ArrayOfGuid _returnOutputGroupsOutputGroupInfoVal1Outputs = new com.mile.ServerCommandService.ArrayOfGuid();
            java.util.List<java.lang.String> _returnOutputGroupsOutputGroupInfoVal1OutputsGuid = new java.util.ArrayList<java.lang.String>();
            _returnOutputGroupsOutputGroupInfoVal1Outputs.getGuid().addAll(_returnOutputGroupsOutputGroupInfoVal1OutputsGuid);
            _returnOutputGroupsOutputGroupInfoVal1.setOutputs(_returnOutputGroupsOutputGroupInfoVal1Outputs);
            _returnOutputGroupsOutputGroupInfo.add(_returnOutputGroupsOutputGroupInfoVal1);
            _returnOutputGroups.getOutputGroupInfo().addAll(_returnOutputGroupsOutputGroupInfo);
            _return.setOutputGroups(_returnOutputGroups);
            com.mile.ServerCommandService.ArrayOfMicrophoneGroupInfo _returnMicrophoneGroups = new com.mile.ServerCommandService.ArrayOfMicrophoneGroupInfo();
            java.util.List<com.mile.ServerCommandService.MicrophoneGroupInfo> _returnMicrophoneGroupsMicrophoneGroupInfo = new java.util.ArrayList<com.mile.ServerCommandService.MicrophoneGroupInfo>();
            com.mile.ServerCommandService.MicrophoneGroupInfo _returnMicrophoneGroupsMicrophoneGroupInfoVal1 = new com.mile.ServerCommandService.MicrophoneGroupInfo();
            _returnMicrophoneGroupsMicrophoneGroupInfoVal1.setGroupId("GroupId-284792468");
            _returnMicrophoneGroupsMicrophoneGroupInfoVal1.setName("Name1983883564");
            _returnMicrophoneGroupsMicrophoneGroupInfoVal1.setDescription("Description-120529671");
            com.mile.ServerCommandService.ArrayOfMicrophoneGroupInfo _returnMicrophoneGroupsMicrophoneGroupInfoVal1MicrophoneGroups = new com.mile.ServerCommandService.ArrayOfMicrophoneGroupInfo();
            java.util.List<com.mile.ServerCommandService.MicrophoneGroupInfo> _returnMicrophoneGroupsMicrophoneGroupInfoVal1MicrophoneGroupsMicrophoneGroupInfo = new java.util.ArrayList<com.mile.ServerCommandService.MicrophoneGroupInfo>();
            _returnMicrophoneGroupsMicrophoneGroupInfoVal1MicrophoneGroups.getMicrophoneGroupInfo().addAll(_returnMicrophoneGroupsMicrophoneGroupInfoVal1MicrophoneGroupsMicrophoneGroupInfo);
            _returnMicrophoneGroupsMicrophoneGroupInfoVal1.setMicrophoneGroups(_returnMicrophoneGroupsMicrophoneGroupInfoVal1MicrophoneGroups);
            com.mile.ServerCommandService.ArrayOfGuid _returnMicrophoneGroupsMicrophoneGroupInfoVal1Microphones = new com.mile.ServerCommandService.ArrayOfGuid();
            java.util.List<java.lang.String> _returnMicrophoneGroupsMicrophoneGroupInfoVal1MicrophonesGuid = new java.util.ArrayList<java.lang.String>();
            _returnMicrophoneGroupsMicrophoneGroupInfoVal1Microphones.getGuid().addAll(_returnMicrophoneGroupsMicrophoneGroupInfoVal1MicrophonesGuid);
            _returnMicrophoneGroupsMicrophoneGroupInfoVal1.setMicrophones(_returnMicrophoneGroupsMicrophoneGroupInfoVal1Microphones);
            _returnMicrophoneGroupsMicrophoneGroupInfo.add(_returnMicrophoneGroupsMicrophoneGroupInfoVal1);
            _returnMicrophoneGroups.getMicrophoneGroupInfo().addAll(_returnMicrophoneGroupsMicrophoneGroupInfo);
            _return.setMicrophoneGroups(_returnMicrophoneGroups);
            com.mile.ServerCommandService.ArrayOfSpeakerGroupInfo _returnSpeakerGroups = new com.mile.ServerCommandService.ArrayOfSpeakerGroupInfo();
            java.util.List<com.mile.ServerCommandService.SpeakerGroupInfo> _returnSpeakerGroupsSpeakerGroupInfo = new java.util.ArrayList<com.mile.ServerCommandService.SpeakerGroupInfo>();
            com.mile.ServerCommandService.SpeakerGroupInfo _returnSpeakerGroupsSpeakerGroupInfoVal1 = new com.mile.ServerCommandService.SpeakerGroupInfo();
            _returnSpeakerGroupsSpeakerGroupInfoVal1.setGroupId("GroupId-657921355");
            _returnSpeakerGroupsSpeakerGroupInfoVal1.setName("Name920421734");
            _returnSpeakerGroupsSpeakerGroupInfoVal1.setDescription("Description-552225343");
            com.mile.ServerCommandService.ArrayOfSpeakerGroupInfo _returnSpeakerGroupsSpeakerGroupInfoVal1SpeakerGroups = new com.mile.ServerCommandService.ArrayOfSpeakerGroupInfo();
            java.util.List<com.mile.ServerCommandService.SpeakerGroupInfo> _returnSpeakerGroupsSpeakerGroupInfoVal1SpeakerGroupsSpeakerGroupInfo = new java.util.ArrayList<com.mile.ServerCommandService.SpeakerGroupInfo>();
            _returnSpeakerGroupsSpeakerGroupInfoVal1SpeakerGroups.getSpeakerGroupInfo().addAll(_returnSpeakerGroupsSpeakerGroupInfoVal1SpeakerGroupsSpeakerGroupInfo);
            _returnSpeakerGroupsSpeakerGroupInfoVal1.setSpeakerGroups(_returnSpeakerGroupsSpeakerGroupInfoVal1SpeakerGroups);
            com.mile.ServerCommandService.ArrayOfGuid _returnSpeakerGroupsSpeakerGroupInfoVal1Speakers = new com.mile.ServerCommandService.ArrayOfGuid();
            java.util.List<java.lang.String> _returnSpeakerGroupsSpeakerGroupInfoVal1SpeakersGuid = new java.util.ArrayList<java.lang.String>();
            _returnSpeakerGroupsSpeakerGroupInfoVal1Speakers.getGuid().addAll(_returnSpeakerGroupsSpeakerGroupInfoVal1SpeakersGuid);
            _returnSpeakerGroupsSpeakerGroupInfoVal1.setSpeakers(_returnSpeakerGroupsSpeakerGroupInfoVal1Speakers);
            _returnSpeakerGroupsSpeakerGroupInfo.add(_returnSpeakerGroupsSpeakerGroupInfoVal1);
            _returnSpeakerGroups.getSpeakerGroupInfo().addAll(_returnSpeakerGroupsSpeakerGroupInfo);
            _return.setSpeakerGroups(_returnSpeakerGroups);
            com.mile.ServerCommandService.ArrayOfMetadataDeviceGroupInfo _returnMetadataDeviceGroups = new com.mile.ServerCommandService.ArrayOfMetadataDeviceGroupInfo();
            java.util.List<com.mile.ServerCommandService.MetadataDeviceGroupInfo> _returnMetadataDeviceGroupsMetadataDeviceGroupInfo = new java.util.ArrayList<com.mile.ServerCommandService.MetadataDeviceGroupInfo>();
            com.mile.ServerCommandService.MetadataDeviceGroupInfo _returnMetadataDeviceGroupsMetadataDeviceGroupInfoVal1 = new com.mile.ServerCommandService.MetadataDeviceGroupInfo();
            _returnMetadataDeviceGroupsMetadataDeviceGroupInfoVal1.setGroupId("GroupId1728466888");
            _returnMetadataDeviceGroupsMetadataDeviceGroupInfoVal1.setName("Name-1315589616");
            _returnMetadataDeviceGroupsMetadataDeviceGroupInfoVal1.setDescription("Description-727864805");
            com.mile.ServerCommandService.ArrayOfMetadataDeviceGroupInfo _returnMetadataDeviceGroupsMetadataDeviceGroupInfoVal1MetadataDeviceGroups = new com.mile.ServerCommandService.ArrayOfMetadataDeviceGroupInfo();
            java.util.List<com.mile.ServerCommandService.MetadataDeviceGroupInfo> _returnMetadataDeviceGroupsMetadataDeviceGroupInfoVal1MetadataDeviceGroupsMetadataDeviceGroupInfo = new java.util.ArrayList<com.mile.ServerCommandService.MetadataDeviceGroupInfo>();
            _returnMetadataDeviceGroupsMetadataDeviceGroupInfoVal1MetadataDeviceGroups.getMetadataDeviceGroupInfo().addAll(_returnMetadataDeviceGroupsMetadataDeviceGroupInfoVal1MetadataDeviceGroupsMetadataDeviceGroupInfo);
            _returnMetadataDeviceGroupsMetadataDeviceGroupInfoVal1.setMetadataDeviceGroups(_returnMetadataDeviceGroupsMetadataDeviceGroupInfoVal1MetadataDeviceGroups);
            com.mile.ServerCommandService.ArrayOfGuid _returnMetadataDeviceGroupsMetadataDeviceGroupInfoVal1MetadataDevices = new com.mile.ServerCommandService.ArrayOfGuid();
            java.util.List<java.lang.String> _returnMetadataDeviceGroupsMetadataDeviceGroupInfoVal1MetadataDevicesGuid = new java.util.ArrayList<java.lang.String>();
            _returnMetadataDeviceGroupsMetadataDeviceGroupInfoVal1MetadataDevices.getGuid().addAll(_returnMetadataDeviceGroupsMetadataDeviceGroupInfoVal1MetadataDevicesGuid);
            _returnMetadataDeviceGroupsMetadataDeviceGroupInfoVal1.setMetadataDevices(_returnMetadataDeviceGroupsMetadataDeviceGroupInfoVal1MetadataDevices);
            _returnMetadataDeviceGroupsMetadataDeviceGroupInfo.add(_returnMetadataDeviceGroupsMetadataDeviceGroupInfoVal1);
            _returnMetadataDeviceGroups.getMetadataDeviceGroupInfo().addAll(_returnMetadataDeviceGroupsMetadataDeviceGroupInfo);
            _return.setMetadataDeviceGroups(_returnMetadataDeviceGroups);
            com.mile.ServerCommandService.ArrayOfEventTypeGroupInfo _returnEventTypeGroups = new com.mile.ServerCommandService.ArrayOfEventTypeGroupInfo();
            java.util.List<com.mile.ServerCommandService.EventTypeGroupInfo> _returnEventTypeGroupsEventTypeGroupInfo = new java.util.ArrayList<com.mile.ServerCommandService.EventTypeGroupInfo>();
            com.mile.ServerCommandService.EventTypeGroupInfo _returnEventTypeGroupsEventTypeGroupInfoVal1 = new com.mile.ServerCommandService.EventTypeGroupInfo();
            _returnEventTypeGroupsEventTypeGroupInfoVal1.setGroupId("GroupId-759900319");
            _returnEventTypeGroupsEventTypeGroupInfoVal1.setName("Name-543720760");
            _returnEventTypeGroupsEventTypeGroupInfoVal1.setDescription("Description-890013521");
            com.mile.ServerCommandService.ArrayOfEventTypeGroupInfo _returnEventTypeGroupsEventTypeGroupInfoVal1EventTypeGroups = new com.mile.ServerCommandService.ArrayOfEventTypeGroupInfo();
            java.util.List<com.mile.ServerCommandService.EventTypeGroupInfo> _returnEventTypeGroupsEventTypeGroupInfoVal1EventTypeGroupsEventTypeGroupInfo = new java.util.ArrayList<com.mile.ServerCommandService.EventTypeGroupInfo>();
            _returnEventTypeGroupsEventTypeGroupInfoVal1EventTypeGroups.getEventTypeGroupInfo().addAll(_returnEventTypeGroupsEventTypeGroupInfoVal1EventTypeGroupsEventTypeGroupInfo);
            _returnEventTypeGroupsEventTypeGroupInfoVal1.setEventTypeGroups(_returnEventTypeGroupsEventTypeGroupInfoVal1EventTypeGroups);
            com.mile.ServerCommandService.ArrayOfGuid _returnEventTypeGroupsEventTypeGroupInfoVal1EventTypes = new com.mile.ServerCommandService.ArrayOfGuid();
            java.util.List<java.lang.String> _returnEventTypeGroupsEventTypeGroupInfoVal1EventTypesGuid = new java.util.ArrayList<java.lang.String>();
            _returnEventTypeGroupsEventTypeGroupInfoVal1EventTypes.getGuid().addAll(_returnEventTypeGroupsEventTypeGroupInfoVal1EventTypesGuid);
            _returnEventTypeGroupsEventTypeGroupInfoVal1.setEventTypes(_returnEventTypeGroupsEventTypeGroupInfoVal1EventTypes);
            _returnEventTypeGroupsEventTypeGroupInfo.add(_returnEventTypeGroupsEventTypeGroupInfoVal1);
            _returnEventTypeGroups.getEventTypeGroupInfo().addAll(_returnEventTypeGroupsEventTypeGroupInfo);
            _return.setEventTypeGroups(_returnEventTypeGroups);
            com.mile.ServerCommandService.ArrayOfEventTypeInfo _returnEventTypes = new com.mile.ServerCommandService.ArrayOfEventTypeInfo();
            java.util.List<com.mile.ServerCommandService.EventTypeInfo> _returnEventTypesEventTypeInfo = new java.util.ArrayList<com.mile.ServerCommandService.EventTypeInfo>();
            com.mile.ServerCommandService.EventTypeInfo _returnEventTypesEventTypeInfoVal1 = new com.mile.ServerCommandService.EventTypeInfo();
            _returnEventTypesEventTypeInfoVal1.setEventTypeId("EventTypeId-2141399988");
            _returnEventTypesEventTypeInfoVal1.setName("Name1522470769");
            _returnEventTypesEventTypeInfoVal1.setDescription("Description1026759782");
            _returnEventTypesEventTypeInfo.add(_returnEventTypesEventTypeInfoVal1);
            _returnEventTypes.getEventTypeInfo().addAll(_returnEventTypesEventTypeInfo);
            _return.setEventTypes(_returnEventTypes);
            com.mile.ServerCommandService.ArrayOfSystemEventTypeInfo _returnSystemEventTypes = new com.mile.ServerCommandService.ArrayOfSystemEventTypeInfo();
            java.util.List<com.mile.ServerCommandService.SystemEventTypeInfo> _returnSystemEventTypesSystemEventTypeInfo = new java.util.ArrayList<com.mile.ServerCommandService.SystemEventTypeInfo>();
            com.mile.ServerCommandService.SystemEventTypeInfo _returnSystemEventTypesSystemEventTypeInfoVal1 = new com.mile.ServerCommandService.SystemEventTypeInfo();
            _returnSystemEventTypesSystemEventTypeInfoVal1.setEventTypeId("EventTypeId951733816");
            _returnSystemEventTypesSystemEventTypeInfoVal1.setName("Name1568141430");
            _returnSystemEventTypesSystemEventTypeInfoVal1.setDescription("Description1179830053");
            com.mile.ServerCommandService.EventSource _returnSystemEventTypesSystemEventTypeInfoVal1EventSource = com.mile.ServerCommandService.EventSource.DEVICE;
            _returnSystemEventTypesSystemEventTypeInfoVal1.setEventSource(_returnSystemEventTypesSystemEventTypeInfoVal1EventSource);
            _returnSystemEventTypesSystemEventTypeInfo.add(_returnSystemEventTypesSystemEventTypeInfoVal1);
            _returnSystemEventTypes.getSystemEventTypeInfo().addAll(_returnSystemEventTypesSystemEventTypeInfo);
            _return.setSystemEventTypes(_returnSystemEventTypes);
            com.mile.ServerCommandService.ArrayOfAlertTypeGroupInfo _returnAlertTypeGroups = new com.mile.ServerCommandService.ArrayOfAlertTypeGroupInfo();
            java.util.List<com.mile.ServerCommandService.AlertTypeGroupInfo> _returnAlertTypeGroupsAlertTypeGroupInfo = new java.util.ArrayList<com.mile.ServerCommandService.AlertTypeGroupInfo>();
            com.mile.ServerCommandService.AlertTypeGroupInfo _returnAlertTypeGroupsAlertTypeGroupInfoVal1 = new com.mile.ServerCommandService.AlertTypeGroupInfo();
            _returnAlertTypeGroupsAlertTypeGroupInfoVal1.setGroupId("GroupId684644866");
            _returnAlertTypeGroupsAlertTypeGroupInfoVal1.setName("Name100660276");
            _returnAlertTypeGroupsAlertTypeGroupInfoVal1.setDescription("Description-1403160816");
            com.mile.ServerCommandService.ArrayOfAlertTypeGroupInfo _returnAlertTypeGroupsAlertTypeGroupInfoVal1AlertTypeGroups = new com.mile.ServerCommandService.ArrayOfAlertTypeGroupInfo();
            java.util.List<com.mile.ServerCommandService.AlertTypeGroupInfo> _returnAlertTypeGroupsAlertTypeGroupInfoVal1AlertTypeGroupsAlertTypeGroupInfo = new java.util.ArrayList<com.mile.ServerCommandService.AlertTypeGroupInfo>();
            _returnAlertTypeGroupsAlertTypeGroupInfoVal1AlertTypeGroups.getAlertTypeGroupInfo().addAll(_returnAlertTypeGroupsAlertTypeGroupInfoVal1AlertTypeGroupsAlertTypeGroupInfo);
            _returnAlertTypeGroupsAlertTypeGroupInfoVal1.setAlertTypeGroups(_returnAlertTypeGroupsAlertTypeGroupInfoVal1AlertTypeGroups);
            com.mile.ServerCommandService.ArrayOfGuid _returnAlertTypeGroupsAlertTypeGroupInfoVal1AlertTypes = new com.mile.ServerCommandService.ArrayOfGuid();
            java.util.List<java.lang.String> _returnAlertTypeGroupsAlertTypeGroupInfoVal1AlertTypesGuid = new java.util.ArrayList<java.lang.String>();
            _returnAlertTypeGroupsAlertTypeGroupInfoVal1AlertTypes.getGuid().addAll(_returnAlertTypeGroupsAlertTypeGroupInfoVal1AlertTypesGuid);
            _returnAlertTypeGroupsAlertTypeGroupInfoVal1.setAlertTypes(_returnAlertTypeGroupsAlertTypeGroupInfoVal1AlertTypes);
            _returnAlertTypeGroupsAlertTypeGroupInfo.add(_returnAlertTypeGroupsAlertTypeGroupInfoVal1);
            _returnAlertTypeGroups.getAlertTypeGroupInfo().addAll(_returnAlertTypeGroupsAlertTypeGroupInfo);
            _return.setAlertTypeGroups(_returnAlertTypeGroups);
            com.mile.ServerCommandService.ArrayOfAlertTypeInfo _returnAlertTypes = new com.mile.ServerCommandService.ArrayOfAlertTypeInfo();
            java.util.List<com.mile.ServerCommandService.AlertTypeInfo> _returnAlertTypesAlertTypeInfo = new java.util.ArrayList<com.mile.ServerCommandService.AlertTypeInfo>();
            com.mile.ServerCommandService.AlertTypeInfo _returnAlertTypesAlertTypeInfoVal1 = new com.mile.ServerCommandService.AlertTypeInfo();
            _returnAlertTypesAlertTypeInfoVal1.setAlertTypeId("AlertTypeId-1741877069");
            _returnAlertTypesAlertTypeInfoVal1.setName("Name2031410884");
            _returnAlertTypesAlertTypeInfoVal1.setDescription("Description-952194591");
            _returnAlertTypesAlertTypeInfo.add(_returnAlertTypesAlertTypeInfoVal1);
            _returnAlertTypes.getAlertTypeInfo().addAll(_returnAlertTypesAlertTypeInfo);
            _return.setAlertTypes(_returnAlertTypes);
            com.mile.ServerCommandService.ArrayOfMatrixMonitorInfo _returnMatrixMonitors = new com.mile.ServerCommandService.ArrayOfMatrixMonitorInfo();
            java.util.List<com.mile.ServerCommandService.MatrixMonitorInfo> _returnMatrixMonitorsMatrixMonitorInfo = new java.util.ArrayList<com.mile.ServerCommandService.MatrixMonitorInfo>();
            com.mile.ServerCommandService.MatrixMonitorInfo _returnMatrixMonitorsMatrixMonitorInfoVal1 = new com.mile.ServerCommandService.MatrixMonitorInfo();
            _returnMatrixMonitorsMatrixMonitorInfoVal1.setMatrixMonitorId("MatrixMonitorId-658983938");
            _returnMatrixMonitorsMatrixMonitorInfoVal1.setDisplayName("DisplayName-1283013117");
            _returnMatrixMonitorsMatrixMonitorInfo.add(_returnMatrixMonitorsMatrixMonitorInfoVal1);
            _returnMatrixMonitors.getMatrixMonitorInfo().addAll(_returnMatrixMonitorsMatrixMonitorInfo);
            _return.setMatrixMonitors(_returnMatrixMonitors);
            com.mile.ServerCommandService.BookmarkSettingInfo _returnBookmarkSettings = new com.mile.ServerCommandService.BookmarkSettingInfo();
            _returnBookmarkSettings.setDefaultPreTimeSec(-94780017);
            _returnBookmarkSettings.setDefaultPostTimeSec(-1990520191);
            _return.setBookmarkSettings(_returnBookmarkSettings);
            com.mile.ServerCommandService.RetentionSettingInfo _returnRetentionSettings = new com.mile.ServerCommandService.RetentionSettingInfo();
            com.mile.ServerCommandService.ArrayOfRetentionOption _returnRetentionSettingsRetentionOptions = new com.mile.ServerCommandService.ArrayOfRetentionOption();
            java.util.List<com.mile.ServerCommandService.RetentionOption> _returnRetentionSettingsRetentionOptionsRetentionOption = new java.util.ArrayList<com.mile.ServerCommandService.RetentionOption>();
            _returnRetentionSettingsRetentionOptions.getRetentionOption().addAll(_returnRetentionSettingsRetentionOptionsRetentionOption);
            _returnRetentionSettings.setRetentionOptions(_returnRetentionSettingsRetentionOptions);
            _return.setRetentionSettings(_returnRetentionSettings);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.mile.ServerCommandService.ServerCommandServiceSoap#deletePreset(java.lang.String  token ,)java.lang.String  id ,)java.lang.String  deviceId )*
     */
    public void deletePreset(java.lang.String token,java.lang.String id,java.lang.String deviceId) { 
        LOG.info("Executing operation deletePreset");
        System.out.println(token);
        System.out.println(id);
        System.out.println(deviceId);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

}
